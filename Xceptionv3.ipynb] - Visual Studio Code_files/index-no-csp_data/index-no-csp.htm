<!DOCTYPE html>
<html lang="en" style="--vscode-font-family: &quot;Segoe WPC&quot;, &quot;Segoe UI&quot;, sans-serif; --vscode-font-weight: normal; --vscode-font-size: 13px; --vscode-editor-font-family: Consolas, 'Courier New', monospace; --vscode-editor-font-weight: normal; --vscode-editor-font-size: 14px; --text-link-decoration: none; --vscode-foreground: #e6edf3; --vscode-disabledForeground: rgba(204, 204, 204, 0.5); --vscode-errorForeground: #f85149; --vscode-descriptionForeground: #7d8590; --vscode-icon-foreground: #7d8590; --vscode-focusBorder: #1f6feb; --vscode-textLink-foreground: #2f81f7; --vscode-textLink-activeForeground: #2f81f7; --vscode-textSeparator-foreground: #21262d; --vscode-textPreformat-foreground: #7d8590; --vscode-textPreformat-background: rgba(110, 118, 129, 0.4); --vscode-textBlockQuote-background: #010409; --vscode-textBlockQuote-border: #30363d; --vscode-textCodeBlock-background: rgba(110, 118, 129, 0.4); --vscode-sash-hoverBorder: #1f6feb; --vscode-badge-background: #1f6feb; --vscode-badge-foreground: #ffffff; --vscode-activityWarningBadge-foreground: #000000; --vscode-activityWarningBadge-background: #cca700; --vscode-activityErrorBadge-foreground: #000000; --vscode-activityErrorBadge-background: #f14c4c; --vscode-scrollbar-shadow: rgba(72, 79, 88, 0.2); --vscode-scrollbarSlider-background: rgba(139, 148, 158, 0.2); --vscode-scrollbarSlider-hoverBackground: rgba(139, 148, 158, 0.24); --vscode-scrollbarSlider-activeBackground: rgba(139, 148, 158, 0.28); --vscode-progressBar-background: #1f6feb; --vscode-chart-line: #236b8e; --vscode-chart-axis: rgba(191, 191, 191, 0.4); --vscode-chart-guide: rgba(191, 191, 191, 0.2); --vscode-editor-background: #0d1117; --vscode-editor-foreground: #e6edf3; --vscode-editorStickyScroll-background: #0d1117; --vscode-editorStickyScrollHover-background: #2a2d2e; --vscode-editorStickyScroll-shadow: rgba(72, 79, 88, 0.2); --vscode-editorWidget-background: #161b22; --vscode-editorWidget-foreground: #e6edf3; --vscode-editorWidget-border: #454545; --vscode-editorError-foreground: #f14c4c; --vscode-editorWarning-foreground: #cca700; --vscode-editorInfo-foreground: #3794ff; --vscode-editorHint-foreground: rgba(238, 238, 238, 0.7); --vscode-editorLink-activeForeground: #4e94ce; --vscode-editor-selectionBackground: #264f78; --vscode-editor-inactiveSelectionBackground: rgba(38, 79, 120, 0.5); --vscode-editor-selectionHighlightBackground: rgba(63, 185, 80, 0.25); --vscode-editor-compositionBorder: #ffffff; --vscode-editor-findMatchBackground: #9e6a03; --vscode-editor-findMatchHighlightBackground: rgba(242, 204, 96, 0.5); --vscode-editor-findRangeHighlightBackground: rgba(58, 61, 65, 0.4); --vscode-editor-hoverHighlightBackground: rgba(38, 79, 120, 0.25); --vscode-editorHoverWidget-background: #161b22; --vscode-editorHoverWidget-foreground: #e6edf3; --vscode-editorHoverWidget-border: #454545; --vscode-editorHoverWidget-statusBarBackground: #1a2029; --vscode-editorInlayHint-foreground: #7d8590; --vscode-editorInlayHint-background: rgba(139, 148, 158, 0.2); --vscode-editorInlayHint-typeForeground: #7d8590; --vscode-editorInlayHint-typeBackground: rgba(139, 148, 158, 0.2); --vscode-editorInlayHint-parameterForeground: #7d8590; --vscode-editorInlayHint-parameterBackground: rgba(139, 148, 158, 0.2); --vscode-editorLightBulb-foreground: #ffcc00; --vscode-editorLightBulbAutoFix-foreground: #75beff; --vscode-editorLightBulbAi-foreground: #ffcc00; --vscode-editor-snippetTabstopHighlightBackground: rgba(124, 124, 124, 0.3); --vscode-editor-snippetFinalTabstopHighlightBorder: #525252; --vscode-diffEditor-insertedTextBackground: rgba(63, 185, 80, 0.3); --vscode-diffEditor-removedTextBackground: rgba(255, 123, 114, 0.3); --vscode-diffEditor-insertedLineBackground: rgba(35, 134, 54, 0.15); --vscode-diffEditor-removedLineBackground: rgba(218, 54, 51, 0.15); --vscode-diffEditor-diagonalFill: rgba(204, 204, 204, 0.2); --vscode-diffEditor-unchangedRegionBackground: #010409; --vscode-diffEditor-unchangedRegionForeground: #e6edf3; --vscode-diffEditor-unchangedCodeBackground: rgba(116, 116, 116, 0.16); --vscode-widget-shadow: rgba(0, 0, 0, 0.36); --vscode-toolbar-hoverBackground: rgba(90, 93, 94, 0.31); --vscode-toolbar-activeBackground: rgba(99, 102, 103, 0.31); --vscode-breadcrumb-foreground: #7d8590; --vscode-breadcrumb-background: #0d1117; --vscode-breadcrumb-focusForeground: #e6edf3; --vscode-breadcrumb-activeSelectionForeground: #7d8590; --vscode-breadcrumbPicker-background: #161b22; --vscode-merge-currentHeaderBackground: rgba(64, 200, 174, 0.5); --vscode-merge-currentContentBackground: rgba(64, 200, 174, 0.2); --vscode-merge-incomingHeaderBackground: rgba(64, 166, 255, 0.5); --vscode-merge-incomingContentBackground: rgba(64, 166, 255, 0.2); --vscode-merge-commonHeaderBackground: rgba(96, 96, 96, 0.4); --vscode-merge-commonContentBackground: rgba(96, 96, 96, 0.16); --vscode-editorOverviewRuler-currentContentForeground: rgba(64, 200, 174, 0.5); --vscode-editorOverviewRuler-incomingContentForeground: rgba(64, 166, 255, 0.5); --vscode-editorOverviewRuler-commonContentForeground: rgba(96, 96, 96, 0.4); --vscode-editorOverviewRuler-findMatchForeground: rgba(209, 134, 22, 0.49); --vscode-editorOverviewRuler-selectionHighlightForeground: rgba(160, 160, 160, 0.8); --vscode-problemsErrorIcon-foreground: #f14c4c; --vscode-problemsWarningIcon-foreground: #cca700; --vscode-problemsInfoIcon-foreground: #3794ff; --vscode-minimap-findMatchHighlight: #d18616; --vscode-minimap-selectionOccurrenceHighlight: #676767; --vscode-minimap-selectionHighlight: #264f78; --vscode-minimap-infoHighlight: #3794ff; --vscode-minimap-warningHighlight: #cca700; --vscode-minimap-errorHighlight: rgba(255, 18, 18, 0.7); --vscode-minimap-foregroundOpacity: #000000; --vscode-minimapSlider-background: rgba(139, 148, 158, 0.2); --vscode-minimapSlider-hoverBackground: rgba(139, 148, 158, 0.24); --vscode-minimapSlider-activeBackground: rgba(139, 148, 158, 0.28); --vscode-charts-foreground: #e6edf3; --vscode-charts-lines: rgba(230, 237, 243, 0.5); --vscode-charts-red: #f14c4c; --vscode-charts-blue: #3794ff; --vscode-charts-yellow: #cca700; --vscode-charts-orange: #d18616; --vscode-charts-green: #89d185; --vscode-charts-purple: #b180d7; --vscode-input-background: #0d1117; --vscode-input-foreground: #e6edf3; --vscode-input-border: #30363d; --vscode-inputOption-activeBorder: #007acc; --vscode-inputOption-hoverBackground: rgba(90, 93, 94, 0.5); --vscode-inputOption-activeBackground: rgba(31, 111, 235, 0.4); --vscode-inputOption-activeForeground: #ffffff; --vscode-input-placeholderForeground: #6e7681; --vscode-inputValidation-infoBackground: #063b49; --vscode-inputValidation-infoBorder: #007acc; --vscode-inputValidation-warningBackground: #352a05; --vscode-inputValidation-warningBorder: #b89500; --vscode-inputValidation-errorBackground: #5a1d1d; --vscode-inputValidation-errorBorder: #be1100; --vscode-dropdown-background: #161b22; --vscode-dropdown-listBackground: #161b22; --vscode-dropdown-foreground: #e6edf3; --vscode-dropdown-border: #30363d; --vscode-button-foreground: #ffffff; --vscode-button-separator: rgba(255, 255, 255, 0.4); --vscode-button-background: #238636; --vscode-button-hoverBackground: #2ea043; --vscode-button-secondaryForeground: #c9d1d9; --vscode-button-secondaryBackground: #282e33; --vscode-button-secondaryHoverBackground: #30363d; --vscode-radio-activeForeground: #ffffff; --vscode-radio-activeBackground: rgba(31, 111, 235, 0.4); --vscode-radio-activeBorder: #007acc; --vscode-radio-inactiveBorder: rgba(255, 255, 255, 0.2); --vscode-radio-inactiveHoverBackground: rgba(90, 93, 94, 0.5); --vscode-checkbox-background: #161b22; --vscode-checkbox-selectBackground: #161b22; --vscode-checkbox-foreground: #e6edf3; --vscode-checkbox-border: #30363d; --vscode-checkbox-selectBorder: #7d8590; --vscode-checkbox-disabled\.background: #5a6066; --vscode-checkbox-disabled\.foreground: #a1a7ae; --vscode-keybindingLabel-background: rgba(128, 128, 128, 0.17); --vscode-keybindingLabel-foreground: #e6edf3; --vscode-keybindingLabel-border: rgba(51, 51, 51, 0.6); --vscode-keybindingLabel-bottomBorder: rgba(68, 68, 68, 0.6); --vscode-list-focusBackground: rgba(56, 139, 253, 0.15); --vscode-list-focusForeground: #e6edf3; --vscode-list-focusOutline: #1f6feb; --vscode-list-activeSelectionBackground: rgba(110, 118, 129, 0.4); --vscode-list-activeSelectionForeground: #e6edf3; --vscode-list-inactiveSelectionBackground: rgba(110, 118, 129, 0.4); --vscode-list-inactiveSelectionForeground: #e6edf3; --vscode-list-inactiveFocusBackground: rgba(56, 139, 253, 0.15); --vscode-list-hoverBackground: rgba(110, 118, 129, 0.1); --vscode-list-hoverForeground: #e6edf3; --vscode-list-dropBackground: #062f4a; --vscode-list-dropBetweenBackground: #7d8590; --vscode-list-highlightForeground: #2f81f7; --vscode-list-focusHighlightForeground: #2f81f7; --vscode-list-invalidItemForeground: #b89500; --vscode-list-errorForeground: #f88070; --vscode-list-warningForeground: #cca700; --vscode-listFilterWidget-background: #161b22; --vscode-listFilterWidget-outline: rgba(0, 0, 0, 0); --vscode-listFilterWidget-noMatchesOutline: #be1100; --vscode-listFilterWidget-shadow: rgba(0, 0, 0, 0.36); --vscode-list-filterMatchBackground: rgba(242, 204, 96, 0.5); --vscode-list-deemphasizedForeground: #8c8c8c; --vscode-tree-indentGuidesStroke: #21262d; --vscode-tree-inactiveIndentGuidesStroke: rgba(33, 38, 45, 0.4); --vscode-tree-tableColumnsBorder: rgba(204, 204, 204, 0.13); --vscode-tree-tableOddRowsBackground: rgba(230, 237, 243, 0.04); --vscode-editorActionList-background: #161b22; --vscode-editorActionList-foreground: #e6edf3; --vscode-editorActionList-focusForeground: #e6edf3; --vscode-editorActionList-focusBackground: rgba(110, 118, 129, 0.4); --vscode-menu-foreground: #e6edf3; --vscode-menu-background: #161b22; --vscode-menu-selectionForeground: #e6edf3; --vscode-menu-selectionBackground: rgba(110, 118, 129, 0.4); --vscode-menu-separatorBackground: #606060; --vscode-quickInput-background: #161b22; --vscode-quickInput-foreground: #e6edf3; --vscode-quickInputTitle-background: rgba(255, 255, 255, 0.1); --vscode-pickerGroup-foreground: #7d8590; --vscode-pickerGroup-border: #30363d; --vscode-quickInputList-focusForeground: #e6edf3; --vscode-quickInputList-focusBackground: rgba(110, 118, 129, 0.4); --vscode-search-resultsInfoForeground: rgba(230, 237, 243, 0.65); --vscode-searchEditor-findMatchBackground: rgba(242, 204, 96, 0.33); --vscode-editor-lineHighlightBackground: rgba(110, 118, 129, 0.1); --vscode-editor-lineHighlightBorder: #282828; --vscode-editor-rangeHighlightBackground: rgba(255, 255, 255, 0.04); --vscode-editor-symbolHighlightBackground: rgba(242, 204, 96, 0.5); --vscode-editorCursor-foreground: #2f81f7; --vscode-editorMultiCursor-primary\.foreground: #2f81f7; --vscode-editorMultiCursor-secondary\.foreground: #2f81f7; --vscode-editorWhitespace-foreground: #484f58; --vscode-editorLineNumber-foreground: #6e7681; --vscode-editorIndentGuide-background: rgba(230, 237, 243, 0.12); --vscode-editorIndentGuide-activeBackground: rgba(230, 237, 243, 0.24); --vscode-editorIndentGuide-background1: rgba(230, 237, 243, 0.12); --vscode-editorIndentGuide-background2: rgba(0, 0, 0, 0); --vscode-editorIndentGuide-background3: rgba(0, 0, 0, 0); --vscode-editorIndentGuide-background4: rgba(0, 0, 0, 0); --vscode-editorIndentGuide-background5: rgba(0, 0, 0, 0); --vscode-editorIndentGuide-background6: rgba(0, 0, 0, 0); --vscode-editorIndentGuide-activeBackground1: rgba(230, 237, 243, 0.24); --vscode-editorIndentGuide-activeBackground2: rgba(0, 0, 0, 0); --vscode-editorIndentGuide-activeBackground3: rgba(0, 0, 0, 0); --vscode-editorIndentGuide-activeBackground4: rgba(0, 0, 0, 0); --vscode-editorIndentGuide-activeBackground5: rgba(0, 0, 0, 0); --vscode-editorIndentGuide-activeBackground6: rgba(0, 0, 0, 0); --vscode-editorActiveLineNumber-foreground: #c6c6c6; --vscode-editorLineNumber-activeForeground: #e6edf3; --vscode-editorRuler-foreground: #5a5a5a; --vscode-editorCodeLens-foreground: #999999; --vscode-editorBracketMatch-background: rgba(63, 185, 80, 0.25); --vscode-editorBracketMatch-border: rgba(63, 185, 80, 0.6); --vscode-editorOverviewRuler-border: #010409; --vscode-editorGutter-background: #0d1117; --vscode-editorUnnecessaryCode-opacity: rgba(0, 0, 0, 0.67); --vscode-editorGhostText-foreground: rgba(255, 255, 255, 0.34); --vscode-editorOverviewRuler-rangeHighlightForeground: rgba(0, 122, 204, 0.6); --vscode-editorOverviewRuler-errorForeground: rgba(255, 18, 18, 0.7); --vscode-editorOverviewRuler-warningForeground: #cca700; --vscode-editorOverviewRuler-infoForeground: #3794ff; --vscode-editorBracketHighlight-foreground1: #79c0ff; --vscode-editorBracketHighlight-foreground2: #56d364; --vscode-editorBracketHighlight-foreground3: #e3b341; --vscode-editorBracketHighlight-foreground4: #ffa198; --vscode-editorBracketHighlight-foreground5: #ff9bce; --vscode-editorBracketHighlight-foreground6: #d2a8ff; --vscode-editorBracketHighlight-unexpectedBracket\.foreground: #7d8590; --vscode-editorBracketPairGuide-background1: rgba(0, 0, 0, 0); --vscode-editorBracketPairGuide-background2: rgba(0, 0, 0, 0); --vscode-editorBracketPairGuide-background3: rgba(0, 0, 0, 0); --vscode-editorBracketPairGuide-background4: rgba(0, 0, 0, 0); --vscode-editorBracketPairGuide-background5: rgba(0, 0, 0, 0); --vscode-editorBracketPairGuide-background6: rgba(0, 0, 0, 0); --vscode-editorBracketPairGuide-activeBackground1: rgba(0, 0, 0, 0); --vscode-editorBracketPairGuide-activeBackground2: rgba(0, 0, 0, 0); --vscode-editorBracketPairGuide-activeBackground3: rgba(0, 0, 0, 0); --vscode-editorBracketPairGuide-activeBackground4: rgba(0, 0, 0, 0); --vscode-editorBracketPairGuide-activeBackground5: rgba(0, 0, 0, 0); --vscode-editorBracketPairGuide-activeBackground6: rgba(0, 0, 0, 0); --vscode-editorUnicodeHighlight-border: #cca700; --vscode-diffEditor-move\.border: rgba(139, 139, 139, 0.61); --vscode-diffEditor-moveActive\.border: #ffa500; --vscode-diffEditor-unchangedRegionShadow: #000000; --vscode-editorOverviewRuler-bracketMatchForeground: #a0a0a0; --vscode-actionBar-toggledBackground: rgba(31, 111, 235, 0.4); --vscode-symbolIcon-arrayForeground: #f0883e; --vscode-symbolIcon-booleanForeground: #58a6ff; --vscode-symbolIcon-classForeground: #f0883e; --vscode-symbolIcon-colorForeground: #79c0ff; --vscode-symbolIcon-constantForeground: #e6edf3; --vscode-symbolIcon-constructorForeground: #d2a8ff; --vscode-symbolIcon-enumeratorForeground: #f0883e; --vscode-symbolIcon-enumeratorMemberForeground: #58a6ff; --vscode-symbolIcon-eventForeground: #6e7681; --vscode-symbolIcon-fieldForeground: #f0883e; --vscode-symbolIcon-fileForeground: #d29922; --vscode-symbolIcon-folderForeground: #d29922; --vscode-symbolIcon-functionForeground: #bc8cff; --vscode-symbolIcon-interfaceForeground: #f0883e; --vscode-symbolIcon-keyForeground: #58a6ff; --vscode-symbolIcon-keywordForeground: #ff7b72; --vscode-symbolIcon-methodForeground: #bc8cff; --vscode-symbolIcon-moduleForeground: #ff7b72; --vscode-symbolIcon-namespaceForeground: #ff7b72; --vscode-symbolIcon-nullForeground: #58a6ff; --vscode-symbolIcon-numberForeground: #3fb950; --vscode-symbolIcon-objectForeground: #f0883e; --vscode-symbolIcon-operatorForeground: #79c0ff; --vscode-symbolIcon-packageForeground: #f0883e; --vscode-symbolIcon-propertyForeground: #f0883e; --vscode-symbolIcon-referenceForeground: #58a6ff; --vscode-symbolIcon-snippetForeground: #58a6ff; --vscode-symbolIcon-stringForeground: #79c0ff; --vscode-symbolIcon-structForeground: #f0883e; --vscode-symbolIcon-textForeground: #79c0ff; --vscode-symbolIcon-typeParameterForeground: #79c0ff; --vscode-symbolIcon-unitForeground: #58a6ff; --vscode-symbolIcon-variableForeground: #f0883e; --vscode-peekViewTitle-background: #252526; --vscode-peekViewTitleLabel-foreground: #ffffff; --vscode-peekViewTitleDescription-foreground: rgba(204, 204, 204, 0.7); --vscode-peekView-border: #3794ff; --vscode-peekViewResult-background: #0d1117; --vscode-peekViewResult-lineForeground: #bbbbbb; --vscode-peekViewResult-fileForeground: #ffffff; --vscode-peekViewResult-selectionBackground: rgba(51, 153, 255, 0.2); --vscode-peekViewResult-selectionForeground: #ffffff; --vscode-peekViewEditor-background: rgba(110, 118, 129, 0.1); --vscode-peekViewEditorGutter-background: rgba(110, 118, 129, 0.1); --vscode-peekViewEditorStickyScroll-background: rgba(110, 118, 129, 0.1); --vscode-peekViewResult-matchHighlightBackground: rgba(187, 128, 9, 0.4); --vscode-peekViewEditor-matchHighlightBackground: rgba(187, 128, 9, 0.4); --vscode-editor-foldBackground: rgba(110, 118, 129, 0.1); --vscode-editor-foldPlaceholderForeground: #808080; --vscode-editorGutter-foldingControlForeground: #7d8590; --vscode-editorSuggestWidget-background: #161b22; --vscode-editorSuggestWidget-border: #454545; --vscode-editorSuggestWidget-foreground: #e6edf3; --vscode-editorSuggestWidget-selectedForeground: #e6edf3; --vscode-editorSuggestWidget-selectedBackground: rgba(110, 118, 129, 0.4); --vscode-editorSuggestWidget-highlightForeground: #2f81f7; --vscode-editorSuggestWidget-focusHighlightForeground: #2f81f7; --vscode-editorSuggestWidgetStatus-foreground: rgba(230, 237, 243, 0.5); --vscode-inlineEdit-originalBackground: rgba(255, 123, 114, 0.06); --vscode-inlineEdit-modifiedBackground: rgba(63, 185, 80, 0.09); --vscode-inlineEdit-originalChangedLineBackground: rgba(255, 123, 114, 0.24); --vscode-inlineEdit-originalChangedTextBackground: rgba(255, 123, 114, 0.24); --vscode-inlineEdit-modifiedChangedLineBackground: rgba(35, 134, 54, 0.1); --vscode-inlineEdit-modifiedChangedTextBackground: rgba(63, 185, 80, 0.21); --vscode-inlineEdit-gutterIndicator\.primaryForeground: #ffffff; --vscode-inlineEdit-gutterIndicator\.primaryBorder: #238636; --vscode-inlineEdit-gutterIndicator\.primaryBackground: rgba(35, 134, 54, 0.4); --vscode-inlineEdit-gutterIndicator\.secondaryForeground: #c9d1d9; --vscode-inlineEdit-gutterIndicator\.secondaryBorder: #282e33; --vscode-inlineEdit-gutterIndicator\.secondaryBackground: #282e33; --vscode-inlineEdit-gutterIndicator\.successfulForeground: #ffffff; --vscode-inlineEdit-gutterIndicator\.successfulBorder: #238636; --vscode-inlineEdit-gutterIndicator\.successfulBackground: #238636; --vscode-inlineEdit-gutterIndicator\.background: rgba(1, 4, 9, 0.5); --vscode-inlineEdit-originalBorder: rgba(255, 123, 114, 0.3); --vscode-inlineEdit-modifiedBorder: rgba(63, 185, 80, 0.3); --vscode-inlineEdit-tabWillAcceptModifiedBorder: rgba(63, 185, 79, 0.3); --vscode-inlineEdit-tabWillAcceptOriginalBorder: rgba(255, 124, 114, 0.3); --vscode-editorMarkerNavigationError-background: #f14c4c; --vscode-editorMarkerNavigationError-headerBackground: rgba(241, 76, 76, 0.1); --vscode-editorMarkerNavigationWarning-background: #cca700; --vscode-editorMarkerNavigationWarning-headerBackground: rgba(204, 167, 0, 0.1); --vscode-editorMarkerNavigationInfo-background: #3794ff; --vscode-editorMarkerNavigationInfo-headerBackground: rgba(55, 148, 255, 0.1); --vscode-editorMarkerNavigation-background: #0d1117; --vscode-editor-linkedEditingBackground: rgba(47, 129, 247, 0.07); --vscode-editor-wordHighlightBackground: rgba(110, 118, 129, 0.5); --vscode-editor-wordHighlightStrongBackground: rgba(110, 118, 129, 0.3); --vscode-editor-wordHighlightTextBackground: rgba(110, 118, 129, 0.5); --vscode-editor-wordHighlightBorder: rgba(110, 118, 129, 0.6); --vscode-editor-wordHighlightStrongBorder: rgba(110, 118, 129, 0.6); --vscode-editor-wordHighlightTextBorder: rgba(110, 118, 129, 0.6); --vscode-editorOverviewRuler-wordHighlightForeground: rgba(160, 160, 160, 0.8); --vscode-editorOverviewRuler-wordHighlightStrongForeground: rgba(192, 160, 192, 0.8); --vscode-editorOverviewRuler-wordHighlightTextForeground: rgba(160, 160, 160, 0.8); --vscode-editorHoverWidget-highlightForeground: #2f81f7; --vscode-editor-placeholder\.foreground: rgba(255, 255, 255, 0.34); --vscode-tab-activeBackground: #0d1117; --vscode-tab-unfocusedActiveBackground: #0d1117; --vscode-tab-inactiveBackground: #010409; --vscode-tab-unfocusedInactiveBackground: #010409; --vscode-tab-activeForeground: #e6edf3; --vscode-tab-inactiveForeground: #7d8590; --vscode-tab-unfocusedActiveForeground: rgba(230, 237, 243, 0.5); --vscode-tab-unfocusedInactiveForeground: rgba(125, 133, 144, 0.5); --vscode-tab-hoverBackground: #0d1117; --vscode-tab-unfocusedHoverBackground: rgba(110, 118, 129, 0.1); --vscode-tab-border: #30363d; --vscode-tab-lastPinnedBorder: #21262d; --vscode-tab-activeBorder: #0d1117; --vscode-tab-unfocusedActiveBorder: #0d1117; --vscode-tab-activeBorderTop: #f78166; --vscode-tab-unfocusedActiveBorderTop: #30363d; --vscode-tab-selectedBorderTop: #f78166; --vscode-tab-selectedBackground: #0d1117; --vscode-tab-selectedForeground: #e6edf3; --vscode-tab-dragAndDropBorder: #e6edf3; --vscode-tab-activeModifiedBorder: #3399cc; --vscode-tab-inactiveModifiedBorder: rgba(51, 153, 204, 0.5); --vscode-tab-unfocusedActiveModifiedBorder: rgba(51, 153, 204, 0.5); --vscode-tab-unfocusedInactiveModifiedBorder: rgba(51, 153, 204, 0.25); --vscode-editorPane-background: #0d1117; --vscode-editorGroupHeader-tabsBackground: #010409; --vscode-editorGroupHeader-tabsBorder: #30363d; --vscode-editorGroupHeader-noTabsBackground: #0d1117; --vscode-editorGroup-border: #30363d; --vscode-editorGroup-dropBackground: rgba(83, 89, 93, 0.5); --vscode-editorGroup-dropIntoPromptForeground: #e6edf3; --vscode-editorGroup-dropIntoPromptBackground: #161b22; --vscode-sideBySideEditor-horizontalBorder: #30363d; --vscode-sideBySideEditor-verticalBorder: #30363d; --vscode-banner-background: rgba(110, 118, 129, 0.4); --vscode-banner-foreground: #e6edf3; --vscode-banner-iconForeground: #3794ff; --vscode-statusBar-foreground: #7d8590; --vscode-statusBar-noFolderForeground: #7d8590; --vscode-statusBar-background: #0d1117; --vscode-statusBar-noFolderBackground: #0d1117; --vscode-statusBar-border: #30363d; --vscode-statusBar-focusBorder: rgba(31, 111, 235, 0.5); --vscode-statusBar-noFolderBorder: #30363d; --vscode-statusBarItem-activeBackground: rgba(230, 237, 243, 0.12); --vscode-statusBarItem-focusBorder: #1f6feb; --vscode-statusBarItem-hoverBackground: rgba(230, 237, 243, 0.08); --vscode-statusBarItem-hoverForeground: #7d8590; --vscode-statusBarItem-compactHoverBackground: rgba(255, 255, 255, 0.2); --vscode-statusBarItem-prominentForeground: #7d8590; --vscode-statusBarItem-prominentBackground: rgba(110, 118, 129, 0.4); --vscode-statusBarItem-prominentHoverForeground: #7d8590; --vscode-statusBarItem-prominentHoverBackground: rgba(230, 237, 243, 0.08); --vscode-statusBarItem-errorBackground: #b91007; --vscode-statusBarItem-errorForeground: #ffffff; --vscode-statusBarItem-errorHoverForeground: #7d8590; --vscode-statusBarItem-errorHoverBackground: rgba(230, 237, 243, 0.08); --vscode-statusBarItem-warningBackground: #7a6400; --vscode-statusBarItem-warningForeground: #ffffff; --vscode-statusBarItem-warningHoverForeground: #7d8590; --vscode-statusBarItem-warningHoverBackground: rgba(230, 237, 243, 0.08); --vscode-activityBar-background: #0d1117; --vscode-activityBar-foreground: #e6edf3; --vscode-activityBar-inactiveForeground: #7d8590; --vscode-activityBar-border: #30363d; --vscode-activityBar-activeBorder: #f78166; --vscode-activityBar-dropBorder: #e6edf3; --vscode-activityBarBadge-background: #1f6feb; --vscode-activityBarBadge-foreground: #ffffff; --vscode-activityBarTop-foreground: #e7e7e7; --vscode-activityBarTop-activeBorder: #e7e7e7; --vscode-activityBarTop-inactiveForeground: rgba(231, 231, 231, 0.6); --vscode-activityBarTop-dropBorder: #e7e7e7; --vscode-panel-background: #010409; --vscode-panel-border: #30363d; --vscode-panelTitle-activeForeground: #e6edf3; --vscode-panelTitle-inactiveForeground: #7d8590; --vscode-panelTitle-activeBorder: #f78166; --vscode-panelTitleBadge-background: #1f6feb; --vscode-panelTitleBadge-foreground: #ffffff; --vscode-panelInput-border: #30363d; --vscode-panel-dropBorder: #e6edf3; --vscode-panelSection-dropBackground: rgba(83, 89, 93, 0.5); --vscode-panelSectionHeader-background: rgba(128, 128, 128, 0.2); --vscode-panelSection-border: #30363d; --vscode-panelStickyScroll-background: #010409; --vscode-panelStickyScroll-shadow: rgba(72, 79, 88, 0.2); --vscode-profileBadge-background: #4d4d4d; --vscode-profileBadge-foreground: #ffffff; --vscode-statusBarItem-remoteBackground: #30363d; --vscode-statusBarItem-remoteForeground: #e6edf3; --vscode-statusBarItem-remoteHoverForeground: #7d8590; --vscode-statusBarItem-remoteHoverBackground: rgba(230, 237, 243, 0.08); --vscode-statusBarItem-offlineBackground: #6c1717; --vscode-statusBarItem-offlineForeground: #e6edf3; --vscode-statusBarItem-offlineHoverForeground: #7d8590; --vscode-statusBarItem-offlineHoverBackground: rgba(230, 237, 243, 0.08); --vscode-extensionBadge-remoteBackground: #1f6feb; --vscode-extensionBadge-remoteForeground: #ffffff; --vscode-sideBar-background: #010409; --vscode-sideBar-foreground: #e6edf3; --vscode-sideBar-border: #30363d; --vscode-sideBarTitle-background: #010409; --vscode-sideBarTitle-foreground: #e6edf3; --vscode-sideBar-dropBackground: rgba(83, 89, 93, 0.5); --vscode-sideBarSectionHeader-background: #010409; --vscode-sideBarSectionHeader-foreground: #e6edf3; --vscode-sideBarSectionHeader-border: #30363d; --vscode-sideBarActivityBarTop-border: #30363d; --vscode-sideBarStickyScroll-background: #010409; --vscode-sideBarStickyScroll-shadow: rgba(72, 79, 88, 0.2); --vscode-titleBar-activeForeground: #7d8590; --vscode-titleBar-inactiveForeground: #7d8590; --vscode-titleBar-activeBackground: #0d1117; --vscode-titleBar-inactiveBackground: #010409; --vscode-titleBar-border: #30363d; --vscode-menubar-selectionForeground: #7d8590; --vscode-menubar-selectionBackground: rgba(90, 93, 94, 0.31); --vscode-commandCenter-foreground: #7d8590; --vscode-commandCenter-activeForeground: #7d8590; --vscode-commandCenter-inactiveForeground: #7d8590; --vscode-commandCenter-background: rgba(255, 255, 255, 0.05); --vscode-commandCenter-activeBackground: rgba(255, 255, 255, 0.08); --vscode-commandCenter-border: rgba(125, 133, 144, 0.2); --vscode-commandCenter-activeBorder: rgba(125, 133, 144, 0.3); --vscode-commandCenter-inactiveBorder: rgba(125, 133, 144, 0.25); --vscode-notifications-foreground: #e6edf3; --vscode-notifications-background: #161b22; --vscode-notificationLink-foreground: #2f81f7; --vscode-notificationCenterHeader-foreground: #7d8590; --vscode-notificationCenterHeader-background: #161b22; --vscode-notifications-border: #30363d; --vscode-notificationsErrorIcon-foreground: #f85149; --vscode-notificationsWarningIcon-foreground: #d29922; --vscode-notificationsInfoIcon-foreground: #2f81f7; --vscode-debugToolBar-background: #161b22; --vscode-debugIcon-startForeground: #89d185; --vscode-inlineChat-foreground: #e6edf3; --vscode-inlineChat-background: #161b22; --vscode-inlineChat-border: #454545; --vscode-inlineChat-shadow: rgba(0, 0, 0, 0.36); --vscode-inlineChatInput-border: #454545; --vscode-inlineChatInput-focusBorder: #1f6feb; --vscode-inlineChatInput-placeholderForeground: #6e7681; --vscode-inlineChatInput-background: #0d1117; --vscode-inlineChatDiff-inserted: rgba(63, 185, 80, 0.15); --vscode-editorOverviewRuler-inlineChatInserted: rgba(63, 185, 80, 0.18); --vscode-editorMinimap-inlineChatInserted: rgba(63, 185, 80, 0.18); --vscode-inlineChatDiff-removed: rgba(255, 123, 114, 0.15); --vscode-editorOverviewRuler-inlineChatRemoved: rgba(255, 123, 114, 0.18); --vscode-extensionButton-background: #238636; --vscode-extensionButton-foreground: #ffffff; --vscode-extensionButton-hoverBackground: #2ea043; --vscode-extensionButton-separator: rgba(255, 255, 255, 0.4); --vscode-extensionButton-prominentBackground: #238636; --vscode-extensionButton-prominentForeground: #ffffff; --vscode-extensionButton-prominentHoverBackground: #2ea043; --vscode-extensionIcon-verifiedForeground: #2f81f7; --vscode-editorWatermark-foreground: rgba(230, 237, 243, 0.6); --vscode-extensionIcon-starForeground: #ff8e00; --vscode-extensionIcon-preReleaseForeground: #1d9271; --vscode-extensionIcon-sponsorForeground: #d758b3; --vscode-extensionIcon-privateForeground: rgba(255, 255, 255, 0.38); --vscode-chat-requestBorder: rgba(255, 255, 255, 0.1); --vscode-chat-requestBackground: rgba(13, 17, 23, 0.62); --vscode-chat-slashCommandBackground: rgba(52, 65, 75, 0.56); --vscode-chat-slashCommandForeground: #40a6ff; --vscode-chat-avatarBackground: #1f1f1f; --vscode-chat-avatarForeground: #e6edf3; --vscode-chat-editedFileForeground: #e2c08d; --vscode-commentsView-resolvedIcon: rgba(204, 204, 204, 0.5); --vscode-commentsView-unresolvedIcon: #1f6feb; --vscode-editorCommentsWidget-replyInputBackground: #252526; --vscode-editorCommentsWidget-resolvedBorder: rgba(204, 204, 204, 0.5); --vscode-editorCommentsWidget-unresolvedBorder: #1f6feb; --vscode-editorCommentsWidget-rangeBackground: rgba(31, 111, 235, 0.1); --vscode-editorCommentsWidget-rangeActiveBackground: rgba(31, 111, 235, 0.1); --vscode-notebook-cellBorderColor: rgba(110, 118, 129, 0.4); --vscode-notebook-focusedEditorBorder: #1f6feb; --vscode-notebookStatusSuccessIcon-foreground: #89d185; --vscode-notebookEditorOverviewRuler-runningCellForeground: #89d185; --vscode-notebookStatusErrorIcon-foreground: #f85149; --vscode-notebookStatusRunningIcon-foreground: #e6edf3; --vscode-notebook-cellToolbarSeparator: rgba(128, 128, 128, 0.35); --vscode-notebook-selectedCellBackground: rgba(110, 118, 129, 0.4); --vscode-notebook-selectedCellBorder: rgba(110, 118, 129, 0.4); --vscode-notebook-focusedCellBorder: #1f6feb; --vscode-notebook-inactiveFocusedCellBorder: rgba(110, 118, 129, 0.4); --vscode-notebook-cellStatusBarItemHoverBackground: rgba(255, 255, 255, 0.15); --vscode-notebook-cellInsertionIndicator: #1f6feb; --vscode-notebookScrollbarSlider-background: rgba(139, 148, 158, 0.2); --vscode-notebookScrollbarSlider-hoverBackground: rgba(139, 148, 158, 0.24); --vscode-notebookScrollbarSlider-activeBackground: rgba(139, 148, 158, 0.28); --vscode-notebook-symbolHighlightBackground: rgba(255, 255, 255, 0.04); --vscode-notebook-cellEditorBackground: #010409; --vscode-notebook-editorBackground: #0d1117; --vscode-editorGutter-modifiedBackground: rgba(187, 128, 9, 0.4); --vscode-editorGutter-modifiedSecondaryBackground: rgba(93, 64, 5, 0.4); --vscode-editorGutter-addedBackground: rgba(46, 160, 67, 0.4); --vscode-editorGutter-addedSecondaryBackground: rgba(23, 80, 33, 0.4); --vscode-editorGutter-deletedBackground: rgba(248, 81, 73, 0.4); --vscode-editorGutter-deletedSecondaryBackground: rgba(185, 16, 7, 0.4); --vscode-minimapGutter-modifiedBackground: rgba(187, 128, 9, 0.4); --vscode-minimapGutter-addedBackground: rgba(46, 160, 67, 0.4); --vscode-minimapGutter-deletedBackground: rgba(248, 81, 73, 0.4); --vscode-editorOverviewRuler-modifiedForeground: rgba(187, 128, 9, 0.24); --vscode-editorOverviewRuler-addedForeground: rgba(46, 160, 67, 0.24); --vscode-editorOverviewRuler-deletedForeground: rgba(248, 81, 73, 0.24); --vscode-editorGutter-itemGlyphForeground: #e6edf3; --vscode-editorGutter-itemBackground: #333941; --vscode-terminal-foreground: #e6edf3; --vscode-terminal-selectionBackground: #264f78; --vscode-terminal-inactiveSelectionBackground: rgba(38, 79, 120, 0.5); --vscode-terminalCommandDecoration-defaultBackground: rgba(255, 255, 255, 0.25); --vscode-terminalCommandDecoration-successBackground: #1b81a8; --vscode-terminalCommandDecoration-errorBackground: #f14c4c; --vscode-terminalOverviewRuler-cursorForeground: rgba(160, 160, 160, 0.8); --vscode-terminal-border: #30363d; --vscode-terminalOverviewRuler-border: #010409; --vscode-terminal-findMatchBackground: #9e6a03; --vscode-terminal-hoverHighlightBackground: rgba(38, 79, 120, 0.13); --vscode-terminal-findMatchHighlightBackground: rgba(242, 204, 96, 0.5); --vscode-terminalOverviewRuler-findMatchForeground: rgba(209, 134, 22, 0.49); --vscode-terminal-dropBackground: rgba(83, 89, 93, 0.5); --vscode-terminal-tab\.activeBorder: #0d1117; --vscode-terminal-initialHintForeground: rgba(255, 255, 255, 0.34); --vscode-scmGraph-historyItemRefColor: #3794ff; --vscode-scmGraph-historyItemRemoteRefColor: #b180d7; --vscode-scmGraph-historyItemBaseRefColor: #ea5c00; --vscode-scmGraph-historyItemHoverDefaultLabelForeground: #e6edf3; --vscode-scmGraph-historyItemHoverDefaultLabelBackground: #1f6feb; --vscode-scmGraph-historyItemHoverLabelForeground: #ffffff; --vscode-scmGraph-historyItemHoverAdditionsForeground: #81b88b; --vscode-scmGraph-historyItemHoverDeletionsForeground: #c74e39; --vscode-scmGraph-foreground1: #ffb000; --vscode-scmGraph-foreground2: #dc267f; --vscode-scmGraph-foreground3: #994f00; --vscode-scmGraph-foreground4: #40b0a6; --vscode-scmGraph-foreground5: #b66dff; --vscode-editorGutter-commentRangeForeground: #333941; --vscode-editorOverviewRuler-commentForeground: #333941; --vscode-editorOverviewRuler-commentUnresolvedForeground: #333941; --vscode-editorGutter-commentGlyphForeground: #e6edf3; --vscode-editorGutter-commentUnresolvedGlyphForeground: #e6edf3; --vscode-ports-iconRunningProcessForeground: #30363d; --vscode-settings-headerForeground: #e6edf3; --vscode-settings-settingsHeaderHoverForeground: rgba(230, 237, 243, 0.7); --vscode-settings-modifiedItemIndicator: rgba(187, 128, 9, 0.4); --vscode-settings-headerBorder: #30363d; --vscode-settings-sashBorder: #30363d; --vscode-settings-dropdownBackground: #161b22; --vscode-settings-dropdownForeground: #e6edf3; --vscode-settings-dropdownBorder: #30363d; --vscode-settings-dropdownListBorder: #454545; --vscode-settings-checkboxBackground: #161b22; --vscode-settings-checkboxForeground: #e6edf3; --vscode-settings-checkboxBorder: #30363d; --vscode-settings-textInputBackground: #0d1117; --vscode-settings-textInputForeground: #e6edf3; --vscode-settings-textInputBorder: #30363d; --vscode-settings-numberInputBackground: #0d1117; --vscode-settings-numberInputForeground: #e6edf3; --vscode-settings-numberInputBorder: #30363d; --vscode-settings-focusedRowBackground: rgba(110, 118, 129, 0.06); --vscode-settings-rowHoverBackground: rgba(110, 118, 129, 0.03); --vscode-settings-focusedRowBorder: #1f6feb; --vscode-keybindingTable-headerBackground: rgba(230, 237, 243, 0.04); --vscode-keybindingTable-rowsBackground: rgba(230, 237, 243, 0.04); --vscode-debugExceptionWidget-border: #a31515; --vscode-debugExceptionWidget-background: #420b0d; --vscode-editor-inlineValuesForeground: rgba(255, 255, 255, 0.5); --vscode-editor-inlineValuesBackground: rgba(255, 200, 0, 0.2); --vscode-debugIcon-breakpointForeground: #f85149; --vscode-debugIcon-breakpointDisabledForeground: #848484; --vscode-debugIcon-breakpointUnverifiedForeground: #848484; --vscode-debugIcon-breakpointCurrentStackframeForeground: #ffcc00; --vscode-debugIcon-breakpointStackframeForeground: #89d185; --vscode-editor-stackFrameHighlightBackground: rgba(187, 128, 9, 0.4); --vscode-editor-focusedStackFrameHighlightBackground: rgba(46, 160, 67, 0.4); --vscode-multiDiffEditor-headerBackground: #262626; --vscode-multiDiffEditor-background: #0d1117; --vscode-multiDiffEditor-border: #30363d; --vscode-prompt-frontMatter\.background: #0a0e13; --vscode-prompt-frontMatter\.inactiveBackground: #0c0f15; --vscode-minimap-chatEditHighlight: rgba(13, 17, 23, 0.6); --vscode-gauge-background: #007acc; --vscode-gauge-foreground: rgba(0, 122, 204, 0.3); --vscode-gauge-warningBackground: #b89500; --vscode-gauge-warningForeground: rgba(184, 149, 0, 0.3); --vscode-gauge-errorBackground: #be1100; --vscode-gauge-errorForeground: rgba(190, 17, 0, 0.3); --vscode-interactive-activeCodeBorder: #007acc; --vscode-interactive-inactiveCodeBorder: rgba(110, 118, 129, 0.4); --vscode-testing-iconFailed: #f14c4c; --vscode-testing-iconErrored: #f14c4c; --vscode-testing-iconPassed: #73c991; --vscode-testing-runAction: #73c991; --vscode-testing-iconQueued: #cca700; --vscode-testing-iconUnset: #848484; --vscode-testing-iconSkipped: #848484; --vscode-testing-peekBorder: #f14c4c; --vscode-testing-messagePeekBorder: #3794ff; --vscode-testing-peekHeaderBackground: rgba(241, 76, 76, 0.1); --vscode-testing-messagePeekHeaderBackground: rgba(55, 148, 255, 0.1); --vscode-testing-coveredBackground: rgba(63, 185, 80, 0.3); --vscode-testing-coveredBorder: rgba(63, 185, 80, 0.23); --vscode-testing-coveredGutterBackground: rgba(63, 185, 80, 0.18); --vscode-testing-uncoveredBranchBackground: #9f514d; --vscode-testing-uncoveredBackground: rgba(255, 123, 114, 0.3); --vscode-testing-uncoveredBorder: rgba(255, 123, 114, 0.23); --vscode-testing-uncoveredGutterBackground: rgba(255, 123, 114, 0.45); --vscode-testing-coverCountBadgeBackground: #1f6feb; --vscode-testing-coverCountBadgeForeground: #ffffff; --vscode-testing-message\.error\.badgeBackground: #f14c4c; --vscode-testing-message\.error\.badgeBorder: #f14c4c; --vscode-testing-message\.error\.badgeForeground: #000000; --vscode-testing-message\.info\.decorationForeground: rgba(230, 237, 243, 0.5); --vscode-testing-iconErrored\.retired: rgba(241, 76, 76, 0.7); --vscode-testing-iconFailed\.retired: rgba(241, 76, 76, 0.7); --vscode-testing-iconPassed\.retired: rgba(115, 201, 145, 0.7); --vscode-testing-iconQueued\.retired: rgba(204, 167, 0, 0.7); --vscode-testing-iconUnset\.retired: rgba(132, 132, 132, 0.7); --vscode-testing-iconSkipped\.retired: rgba(132, 132, 132, 0.7); --vscode-searchEditor-textInputBorder: #30363d; --vscode-statusBar-debuggingBackground: #da3633; --vscode-statusBar-debuggingForeground: #ffffff; --vscode-statusBar-debuggingBorder: #30363d; --vscode-commandCenter-debuggingBackground: rgba(218, 54, 51, 0.26); --vscode-debugTokenExpression-name: #79c0ff; --vscode-debugTokenExpression-type: #4a90e2; --vscode-debugTokenExpression-value: #a5d6ff; --vscode-debugTokenExpression-string: #a5d6ff; --vscode-debugTokenExpression-boolean: #56d364; --vscode-debugTokenExpression-number: #56d364; --vscode-debugTokenExpression-error: #ffa198; --vscode-debugView-exceptionLabelForeground: #e6edf3; --vscode-debugView-exceptionLabelBackground: #6c2022; --vscode-debugView-stateLabelForeground: #e6edf3; --vscode-debugView-stateLabelBackground: rgba(136, 136, 136, 0.27); --vscode-debugView-valueChangedHighlight: #569cd6; --vscode-debugConsole-infoForeground: #8b949e; --vscode-debugConsole-warningForeground: #d29922; --vscode-debugConsole-errorForeground: #ffa198; --vscode-debugConsole-sourceForeground: #e3b341; --vscode-debugConsoleInputIcon-foreground: #bc8cff; --vscode-debugIcon-pauseForeground: #75beff; --vscode-debugIcon-stopForeground: #f48771; --vscode-debugIcon-disconnectForeground: #f48771; --vscode-debugIcon-restartForeground: #89d185; --vscode-debugIcon-stepOverForeground: #75beff; --vscode-debugIcon-stepIntoForeground: #75beff; --vscode-debugIcon-stepOutForeground: #75beff; --vscode-debugIcon-continueForeground: #75beff; --vscode-debugIcon-stepBackForeground: #75beff; --vscode-mergeEditor-change\.background: rgba(155, 185, 85, 0.2); --vscode-mergeEditor-change\.word\.background: rgba(156, 204, 44, 0.2); --vscode-mergeEditor-changeBase\.background: #4b1818; --vscode-mergeEditor-changeBase\.word\.background: #6f1313; --vscode-mergeEditor-conflict\.unhandledUnfocused\.border: rgba(255, 166, 0, 0.48); --vscode-mergeEditor-conflict\.unhandledFocused\.border: #ffa600; --vscode-mergeEditor-conflict\.handledUnfocused\.border: rgba(134, 134, 134, 0.29); --vscode-mergeEditor-conflict\.handledFocused\.border: rgba(193, 193, 193, 0.8); --vscode-mergeEditor-conflict\.handled\.minimapOverViewRuler: rgba(173, 172, 168, 0.93); --vscode-mergeEditor-conflict\.unhandled\.minimapOverViewRuler: #fcba03; --vscode-mergeEditor-conflictingLines\.background: rgba(255, 234, 0, 0.28); --vscode-mergeEditor-conflict\.input1\.background: rgba(64, 200, 174, 0.2); --vscode-mergeEditor-conflict\.input2\.background: rgba(64, 166, 255, 0.2); --vscode-terminal-ansiBlack: #484f58; --vscode-terminal-ansiRed: #ff7b72; --vscode-terminal-ansiGreen: #3fb950; --vscode-terminal-ansiYellow: #d29922; --vscode-terminal-ansiBlue: #58a6ff; --vscode-terminal-ansiMagenta: #bc8cff; --vscode-terminal-ansiCyan: #39c5cf; --vscode-terminal-ansiWhite: #b1bac4; --vscode-terminal-ansiBrightBlack: #6e7681; --vscode-terminal-ansiBrightRed: #ffa198; --vscode-terminal-ansiBrightGreen: #56d364; --vscode-terminal-ansiBrightYellow: #e3b341; --vscode-terminal-ansiBrightBlue: #79c0ff; --vscode-terminal-ansiBrightMagenta: #d2a8ff; --vscode-terminal-ansiBrightCyan: #56d4dd; --vscode-terminal-ansiBrightWhite: #ffffff; --vscode-simpleFindWidget-sashBorder: #454545; --vscode-terminalStickyScrollHover-background: #2a2d2e; --vscode-terminalCommandGuide-foreground: rgba(110, 118, 129, 0.4); --vscode-terminalSymbolIcon-flagForeground: #f0883e; --vscode-terminalSymbolIcon-aliasForeground: #bc8cff; --vscode-terminalSymbolIcon-optionValueForeground: #58a6ff; --vscode-terminalSymbolIcon-methodForeground: #bc8cff; --vscode-terminalSymbolIcon-argumentForeground: #f0883e; --vscode-terminalSymbolIcon-optionForeground: #f0883e; --vscode-terminalSymbolIcon-fileForeground: #d29922; --vscode-terminalSymbolIcon-folderForeground: #d29922; --vscode-welcomePage-tileBackground: #161b22; --vscode-welcomePage-tileHoverBackground: #1a2029; --vscode-welcomePage-tileBorder: rgba(255, 255, 255, 0.1); --vscode-welcomePage-progress\.background: #0d1117; --vscode-welcomePage-progress\.foreground: #2f81f7; --vscode-walkthrough-stepTitle\.foreground: #ffffff; --vscode-walkThrough-embeddedEditorBackground: rgba(0, 0, 0, 0.4); --vscode-profiles-sashBorder: #30363d; --vscode-gitDecoration-addedResourceForeground: #3fb950; --vscode-gitDecoration-modifiedResourceForeground: #d29922; --vscode-gitDecoration-deletedResourceForeground: #f85149; --vscode-gitDecoration-renamedResourceForeground: #73c991; --vscode-gitDecoration-untrackedResourceForeground: #3fb950; --vscode-gitDecoration-ignoredResourceForeground: #6e7681; --vscode-gitDecoration-stageModifiedResourceForeground: #e2c08d; --vscode-gitDecoration-stageDeletedResourceForeground: #c74e39; --vscode-gitDecoration-conflictingResourceForeground: #db6d28; --vscode-gitDecoration-submoduleResourceForeground: #7d8590; --vscode-git-blame\.editorDecorationForeground: #7d8590; --vscode-issues-newIssueDecoration: rgba(255, 255, 255, 0.28); --vscode-issues-open: #3fb950; --vscode-issues-closed: #cb2431; --vscode-pullRequests-merged: #8957e5; --vscode-pullRequests-draft: #6e7681; --vscode-pullRequests-open: #3fb950; --vscode-pullRequests-closed: #cb2431; --vscode-pullRequests-notification: #2f81f7; --theme-input-border-width: 1px; --theme-button-primary-hover-shadow: none; --theme-button-secondary-hover-shadow: none; --theme-input-border-color: transparent; --theme-font-family: &quot;Segoe WPC&quot;, &quot;Segoe UI&quot;, sans-serif; --theme-font-weight: normal; --theme-font-size: 13px; --theme-code-font-family: Consolas, 'Courier New', monospace; --theme-code-font-weight: normal; --theme-code-font-size: 14px; --theme-scrollbar-background: rgba(139, 148, 158, 0.2); --theme-scrollbar-hover-background: rgba(139, 148, 158, 0.24); --theme-scrollbar-active-background: rgba(139, 148, 158, 0.28); --theme-quote-background: #010409; --theme-quote-border: #30363d; --theme-code-foreground: #7d8590; --theme-background: #0d1117; --theme-foreground: #e6edf3; --theme-ui-foreground: #e6edf3; --theme-link: #2f81f7; --theme-link-active: #2f81f7; --theme-button-background: #238636; --theme-button-hover-background: #2ea043; --theme-button-foreground: #ffffff; --theme-button-secondary-background: #282e33; --theme-button-secondary-hover-background: #30363d; --theme-button-secondary-foreground: #c9d1d9; --theme-button-hover-foreground: #ffffff; --theme-button-focus-foreground: #ffffff; --theme-button-secondary-hover-foreground: #c9d1d9; --theme-button-secondary-focus-foreground: #c9d1d9; --theme-input-background: #0d1117; --theme-input-foreground: #e6edf3; --theme-input-placeholder-foreground: #6e7681; --theme-input-focus-border-color: #1f6feb; --theme-menu-background: #161b22; --theme-menu-foreground: #e6edf3; --theme-menu-hover-background: rgba(110, 118, 129, 0.4); --theme-menu-focus-background: rgba(110, 118, 129, 0.4); --theme-menu-hover-foreground: #e6edf3; --theme-menu-focus-foreground: #e6edf3; --theme-error-background: #5a1d1d; --theme-error-foreground: #e6edf3; --theme-warning-background: #352a05; --theme-warning-foreground: #e6edf3; --theme-info-background: #063b49; --theme-info-foreground: #e6edf3; --theme-notebook-output-background: undefined; --theme-notebook-output-border: undefined; --theme-notebook-cell-selected-background: rgba(110, 118, 129, 0.4); --theme-notebook-symbol-highlight-background: rgba(255, 255, 255, 0.04); --theme-notebook-diff-removed-background: rgba(255, 123, 114, 0.3); --theme-notebook-diff-inserted-background: rgba(63, 185, 80, 0.3); --notebook-output-left-margin: 44px; --notebook-output-width: calc(100% - 60px); --notebook-output-node-padding: 8px; --notebook-run-gutter: 36px; --notebook-preview-node-padding: 8px; --notebook-markdown-left-margin: 44px; --notebook-output-node-left-padding: 8px; --notebook-markdown-min-height: 16px; --notebook-markup-font-size: calc(14px * 1.2); --notebook-markdown-line-height: normal; --notebook-cell-output-font-size: 14px; --notebook-cell-output-line-height: 19px; --notebook-cell-output-max-height: 572px; --notebook-cell-output-font-family: Consolas, 'Courier New', monospace; --notebook-cell-markup-empty-content: Empty markdown cell, double-click or press enter to edit.; --notebook-cell-renderer-not-found-error: No renderer found for '$0'; --notebook-cell-renderer-fallbacks-exhausted: Could not render content for '$0';"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><style id="_defaultStyles">
			html {
				scrollbar-color: var(--vscode-scrollbarSlider-background) var(--vscode-editor-background);
			}

			body {
				overscroll-behavior-x: none;
				background-color: transparent;
				color: var(--vscode-editor-foreground);
				font-family: var(--vscode-font-family);
				font-weight: var(--vscode-font-weight);
				font-size: var(--vscode-font-size);
				margin: 0;
				padding: 0 20px;
			}

			img, video {
				max-width: 100%;
				max-height: 100%;
			}

			a, a code {
				color: var(--vscode-textLink-foreground);
			}

			a:hover {
				color: var(--vscode-textLink-activeForeground);
			}

			a:focus,
			input:focus,
			select:focus,
			textarea:focus {
				outline: 1px solid -webkit-focus-ring-color;
				outline-offset: -1px;
			}

			code {
				font-family: var(--monaco-monospace-font);
				color: var(--vscode-textPreformat-foreground);
				background-color: var(--vscode-textPreformat-background);
				padding: 1px 3px;
				border-radius: 4px;
			}

			pre code {
				padding: 0;
			}

			blockquote {
				background: var(--vscode-textBlockQuote-background);
				border-color: var(--vscode-textBlockQuote-border);
			}

			kbd {
				background-color: var(--vscode-keybindingLabel-background);
				color: var(--vscode-keybindingLabel-foreground);
				border-style: solid;
				border-width: 1px;
				border-radius: 3px;
				border-color: var(--vscode-keybindingLabel-border);
				border-bottom-color: var(--vscode-keybindingLabel-bottomBorder);
				box-shadow: inset 0 -1px 0 var(--vscode-widget-shadow);
				vertical-align: middle;
				padding: 1px 3px;
			}

			::-webkit-scrollbar {
				width: 10px;
				height: 10px;
			}

			::-webkit-scrollbar-corner {
				background-color: var(--vscode-editor-background);
			}

			::-webkit-scrollbar-thumb {
				background-color: var(--vscode-scrollbarSlider-background);
			}
			::-webkit-scrollbar-thumb:hover {
				background-color: var(--vscode-scrollbarSlider-hoverBackground);
			}
			::-webkit-scrollbar-thumb:active {
				background-color: var(--vscode-scrollbarSlider-activeBackground);
			}
			::highlight(find-highlight) {
				background-color: var(--vscode-editor-findMatchHighlightBackground);
			}
			::highlight(current-find-highlight) {
				background-color: var(--vscode-editor-findMatchBackground);
			}</style><script id="_vscodeApiScript">
					globalThis.acquireVsCodeApi = (function() {
						const originalPostMessage = window.parent['__vscode_post_message__'].bind(window.parent);
						const doPostMessage = (channel, data, transfer) => {
							originalPostMessage(channel, data, transfer);
						};

						let acquired = false;

						let state = undefined;

						return () => {
							if (acquired && !true) {
								throw new Error('An instance of the VS Code API has already been acquired');
							}
							acquired = true;
							return Object.freeze({
								postMessage: function(message, transfer) {
									doPostMessage('onmessage', { message, transfer }, transfer);
								},
								setState: function(newState) {
									state = newState;
									doPostMessage('do-update-state', JSON.stringify(newState));
									return newState;
								},
								getState: function() {
									return state;
								}
							});
						};
					})();
					delete window.parent;
					delete window.top;
					delete window.frameElement;
				</script>
				<meta charset="UTF-8">
				<!-- base href="https://vscode-remote+codespaces-002bfantastic-002dgoggles-002dwrrqp44grjg929w59.vscode-resource.vscode-cdn.net/workspaces/Paddy-Rice-leaf-detection-and-segmentation/" -->
				
				<style nonce="">
					::highlight(find-highlight) {
						background-color: var(--vscode-editor-findMatchBackground, rgba(242, 204, 96, 0.5));
					}

					::highlight(current-find-highlight) {
						background-color: var(--vscode-editor-findMatchHighlightBackground, #9e6a03);
					}

					#container .cell_container {
						width: 100%;
					}

					#container .output_container {
						width: 100%;
					}

					#container .cell_container.nb-insertHighlight div.output_container div.output {
						background-color: var(--vscode-diffEditor-insertedLineBackground, var(--vscode-diffEditor-insertedTextBackground));
					}

					#container > div > div > div.output {
						font-size: var(--notebook-cell-output-font-size);
						width: var(--notebook-output-width);
						margin-left: var(--notebook-output-left-margin);
						background-color: var(--theme-notebook-output-background);
						padding-top: var(--notebook-output-node-padding);
						padding-right: var(--notebook-output-node-padding);
						padding-bottom: var(--notebook-output-node-padding);
						padding-left: var(--notebook-output-node-left-padding);
						box-sizing: border-box;
						border-top: none;
					}

					/* markdown */
					#container div.preview {
						width: 100%;
						padding-right: var(--notebook-preview-node-padding);
						padding-left: var(--notebook-markdown-left-margin);
						padding-top: var(--notebook-preview-node-padding);
						padding-bottom: var(--notebook-preview-node-padding);

						box-sizing: border-box;
						white-space: nowrap;
						overflow: hidden;
						white-space: initial;

						font-size: var(--notebook-markup-font-size);
						line-height: var(--notebook-markdown-line-height);
						color: var(--theme-ui-foreground);
						font-family: var(--notebook-markup-font-family);
					}

					#container div.preview.draggable {
						user-select: none;
						-webkit-user-select: none;
						-ms-user-select: none;
						cursor: grab;
					}

					#container div.preview.selected {
						background: var(--theme-notebook-cell-selected-background);
					}

					#container div.preview.dragging {
						background-color: var(--theme-background);
						opacity: 0.5 !important;
					}

					.monaco-workbench.vs-dark .notebookOverlay .cell.markdown .latex img,
					.monaco-workbench.vs-dark .notebookOverlay .cell.markdown .latex-block img {
						filter: brightness(0) invert(1)
					}

					#container .markup > div.nb-symbolHighlight {
						background-color: var(--theme-notebook-symbol-highlight-background);
					}

					#container .markup > div.nb-insertHighlight {
						background-color: var(--vscode-diffEditor-insertedLineBackground, var(--vscode-diffEditor-insertedTextBackground));
					}

					#container .nb-symbolHighlight .output_container .output {
						background-color: var(--theme-notebook-symbol-highlight-background);
					}

					#container .markup > div.nb-multiCellHighlight {
						background-color: var(--theme-notebook-symbol-highlight-background);
					}

					#container .nb-multiCellHighlight .output_container .output {
						background-color: var(--theme-notebook-symbol-highlight-background);
					}

					#container .nb-chatGenerationHighlight .output_container .output {
						background-color: var(--vscode-notebook-selectedCellBackground);
					}

					#container > div.nb-cellDeleted .output_container {
						background-color: var(--theme-notebook-diff-removed-background);
					}

					#container > div.nb-cellAdded .output_container {
						background-color: var(--theme-notebook-diff-inserted-background);
					}

					#container > div > div:not(.preview) > div {
						overflow-x: auto;
					}

					#container .no-renderer-error {
						color: var(--vscode-editorError-foreground);
					}

					body {
						padding: 0px;
						height: 100%;
						width: 100%;
					}

					table, thead, tr, th, td, tbody {
						border: none;
						border-color: transparent;
						border-spacing: 0;
						border-collapse: collapse;
					}

					table, th, tr {
						vertical-align: middle;
						text-align: right;
					}

					thead {
						font-weight: bold;
						background-color: rgba(130, 130, 130, 0.16);
					}

					th, td {
						padding: 4px 8px;
					}

					tr:nth-child(even) {
						background-color: rgba(130, 130, 130, 0.08);
					}

					tbody th {
						font-weight: normal;
					}

					.find-match {
						background-color: var(--vscode-editor-findMatchHighlightBackground);
					}

					.current-find-match {
						background-color: var(--vscode-editor-findMatchBackground);
					}

					#_defaultColorPalatte {
						color: var(--vscode-editor-findMatchHighlightBackground);
						background-color: var(--vscode-editor-findMatchBackground);
					}
				</style>
			</head>
			<body style="overflow: hidden;" role="document" class="vscode-dark vscode-reduce-motion" data-vscode-theme-kind="vscode-dark" data-vscode-theme-name="GitHub Dark Default" data-vscode-theme-id="GitHub Dark Default">
				<div id="findStart" tabindex="-1"></div>
				<div id="container" class="widgetarea" style="position: absolute;width:100%;top: 0px"><div id="focus-sink-31a83f6b-6d08-4df0-9e43-9bf30ae38653" tabindex="0"></div><div style="position: absolute; outline: 0px; top: 5018px;" id="31a83f6b-6d08-4df0-9e43-9bf30ae38653" class="cell_container"><div class="output_container" data-vscode-context="{&quot;preventDefaultContextMenuItems&quot;:true}" style="position: absolute; overflow: hidden; max-height: 742px; top: 2115px; height: 742px;"><div id="9cea9808-aaa8-41e1-a7cf-1277416fab68" class="output remove-padding output-stream" style="position: absolute; top: 0px; left: 0px;" draggable="false"><div tabindex="0"><div data-vscode-context="{&quot;webviewSection&quot;:&quot;text&quot;,&quot;outputId&quot;:&quot;9cea9808-aaa8-41e1-a7cf-1277416fab68&quot;,&quot;preventDefaultContextMenuItems&quot;:true}" output-item-id="9cea9808-aaa8-41e1-a7cf-1277416fab68" class="error"><span><span class=""><span><a href="c:\Users\user\AppData\Local\Programs\Python\Python312\Lib\site-packages\torchvision\models\_utils.py:208">C:\Users\user\AppData\Local\Programs\Python\Python312\Lib\site-packages\torchvision\models\_utils.py:208</a>: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
</span><span>  warnings.warn(
</span><span><a href="c:\Users\user\AppData\Local\Programs\Python\Python312\Lib\site-packages\torchvision\models\_utils.py:223">C:\Users\user\AppData\Local\Programs\Python\Python312\Lib\site-packages\torchvision\models\_utils.py:223</a>: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet18_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet18_Weights.DEFAULT` to get the most up-to-date weights.
</span><span>  warnings.warn(msg)
</span><span><a href="c:\Users\user\AppData\Local\Programs\Python\Python312\Lib\site-packages\torchaudio\functional\functional.py:584">C:\Users\user\AppData\Local\Programs\Python\Python312\Lib\site-packages\torchaudio\functional\functional.py:584</a>: UserWarning: At least one mel filterbank has all zero values. The value for `n_mels` (128) may be set too high. Or, the value for `n_freqs` (201) may be set too low.
</span><span>  warnings.warn(
</span></span></span></div><div data-vscode-context="{&quot;webviewSection&quot;:&quot;text&quot;,&quot;outputId&quot;:&quot;42eb76eb-b62a-4738-924d-f0555512eb81&quot;,&quot;preventDefaultContextMenuItems&quot;:true}" output-item-id="42eb76eb-b62a-4738-924d-f0555512eb81"><span><span class=""><span>Epoch 1/5 -- Text: Loss 0.5793, Acc 0.8269 | Image: Loss 0.5139, Acc 0.8254 | Audio: Loss 2.0737, Acc 0.1187
</span><span>Validation -- Text: Loss 0.0001, Acc 1.0000 | Image: Loss 0.1851, Acc 0.9469 | Audio: Loss 2.0277, Acc 0.2500
</span><span>Epoch 2/5 -- Text: Loss 0.0039, Acc 1.0000 | Image: Loss 0.1834, Acc 0.9407 | Audio: Loss 1.9167, Acc 0.4813
</span><span>Validation -- Text: Loss 0.0000, Acc 1.0000 | Image: Loss 0.1065, Acc 0.9662 | Audio: Loss 1.6557, Acc 0.5000
</span><span>Epoch 3/5 -- Text: Loss 0.1224, Acc 0.9672 | Image: Loss 0.1127, Acc 0.9635 | Audio: Loss 1.1723, Acc 0.6375
</span><span>Validation -- Text: Loss 0.0577, Acc 1.0000 | Image: Loss 0.1246, Acc 0.9581 | Audio: Loss 0.7097, Acc 0.8750
</span><span>Epoch 4/5 -- Text: Loss 0.1053, Acc 0.9731 | Image: Loss 0.1212, Acc 0.9631 | Audio: Loss 0.5133, Acc 0.8125
</span><span>Validation -- Text: Loss 0.0018, Acc 1.0000 | Image: Loss 0.1028, Acc 0.9630 | Audio: Loss 0.3651, Acc 0.9750
</span><span>Epoch 5/5 -- Text: Loss 0.0858, Acc 0.9731 | Image: Loss 0.0731, Acc 0.9786 | Audio: Loss 0.3715, Acc 0.8750
</span><span>Validation -- Text: Loss 0.0005, Acc 1.0000 | Image: Loss 0.1051, Acc 0.9694 | Audio: Loss 0.1759, Acc 1.0000
</span><span>Model saved to multimodal_model.pth
</span><span>
</span><span>=== Text Validation Classification Report ===
</span><span>                       precision    recall  f1-score   support
</span><span>
</span><span>Bacterial Leaf Blight       1.00      1.00      1.00        20
</span><span>           Brown Spot       1.00      1.00      1.00        24
</span><span>              Healthy       1.00      1.00      1.00        18
</span><span>           Leaf Blast       1.00      1.00      1.00        17
</span><span>          Leaf Blight       1.00      1.00      1.00        20
</span><span>           Leaf Scald       1.00      1.00      1.00        25
</span><span>            Leaf Smut       1.00      1.00      1.00        23
</span><span>    Narrow Brown Spot       1.00      1.00      1.00        18
</span><span>
</span><span>             accuracy                           1.00       165</span></span></span><div>...</div><span><span class=""><span> [ 0  0  0  0 20  0  0  0]
</span><span> [ 0  0  0  0  0 20  0  0]
</span><span> [ 0  0  0  0  0  0 20  0]
</span><span> [ 0  0  0  0  0  0  0 20]]
</span></span></span><div class="truncation-message"><span>Output is truncated. View as a </span><a href="command:cellOutput.enableScrolling?42eb76eb-b62a-4738-924d-f0555512eb81" aria-label="enable scrollable output">scrollable element</a><span> or open in a </span><a href="command:workbench.action.openLargeOutput?42eb76eb-b62a-4738-924d-f0555512eb81" aria-label="open output in text editor">text editor</a><span>. Adjust cell output </span><a href="command:workbench.action.openSettings?%5B%22%40tag%3AnotebookOutputLayout%22%5D" aria-label="notebook output settings">settings</a><span>...</span></div></div></div></div></div><div class="output_container" data-vscode-context="{&quot;preventDefaultContextMenuItems&quot;:true}" style="position: absolute; overflow: hidden; max-height: 0px; top: 2857px; height: 0px;"><div id="42eb76eb-b62a-4738-924d-f0555512eb81" class="output remove-padding output-stream" style="position: absolute; top: 0px; left: 0px; padding: 0px;" draggable="false"></div></div><div class="output_container" data-vscode-context="{&quot;preventDefaultContextMenuItems&quot;:true}" style="position: absolute; overflow: hidden; max-height: 489px; top: 2857px; height: 489px;"><div id="b802e212-06aa-4056-9a9d-4c55dbae7379" class="output remove-padding" style="position: absolute; top: 0px; left: 0px;" draggable="true"><div class="display" tabindex="0"><img src="blob:https://19h90pd1o7l7gd6uksuevoaqa3uqbjmkbqqj55nfus3gnrn450eq.assets.github.dev/3d904d41-c4d2-45d5-ba83-b125ef58793c" alt="&lt;Figure size 1800x600 with 2 Axes&gt;" data-vscode-context="{&quot;webviewSection&quot;:&quot;image&quot;,&quot;outputId&quot;:&quot;b802e212-06aa-4056-9a9d-4c55dbae7379&quot;,&quot;preventDefaultContextMenuItems&quot;:true}"></div></div></div><div class="output_container" data-vscode-context="{&quot;preventDefaultContextMenuItems&quot;:true}" style="position: absolute; overflow: hidden; max-height: 94px; top: 3346px; height: 94px;"><div id="e82ecd2b-9601-4ded-bb44-bfd81e91a68a" class="output remove-padding output-stream" style="position: absolute; top: 0px; left: 0px;" draggable="false"><div tabindex="0"><div data-vscode-context="{&quot;webviewSection&quot;:&quot;text&quot;,&quot;outputId&quot;:&quot;e82ecd2b-9601-4ded-bb44-bfd81e91a68a&quot;,&quot;preventDefaultContextMenuItems&quot;:true}" output-item-id="e82ecd2b-9601-4ded-bb44-bfd81e91a68a"><span><span class=""><span>Predicted label from text: Bacterial Leaf Blight
</span><span>Predicted label from image: Bacterial Leaf Blight
</span><span>Predicted label from audio: Bacterial Leaf Blight
</span><span>Predicted label from all modalities: Bacterial Leaf Blight
</span></span></span></div></div></div></div></div><div id="focus-sink-31a83f6b-6d08-4df0-9e43-9bf30ae38653" tabindex="0"></div></div>
				<div id="_defaultColorPalatte"></div>
				<script type="module">
		const __import = (x) => import(x);
		(async function Igs(i){const t=navigator.userAgent.indexOf("Chrome")>=0,s=new TextEncoder,n=new TextDecoder;function r(){let Se,Q;return{promise:new Promise(($e,qe)=>{Se=$e,Q=qe}),resolve:Se,reject:Q}}let o=i.options;const a=i.isWorkspaceTrusted;let l=i.renderOptions;const c=Co(),h=globalThis.acquireVsCodeApi,u=h();delete globalThis.acquireVsCodeApi;const f=new CSSStyleSheet;f.replaceSync(i.style.tokenizationCss);const g=typeof requestIdleCallback!="function"||typeof cancelIdleCallback!="function"?Se=>{setTimeout(()=>{if(Q)return;const he=Date.now()+15;Se(Object.freeze({didTimeout:!0,timeRemaining(){return Math.max(0,he-Date.now())}}))});let Q=!1;return{dispose(){Q||(Q=!0)}}}:(Se,Q)=>{const he=requestIdleCallback(Se,typeof Q=="number"?{timeout:Q}:void 0);let $e=!1;return{dispose(){$e||($e=!0,cancelIdleCallback(he))}}};function p(Se){for(const Q of Se.composedPath())if(Q instanceof HTMLElement&&Q.classList.contains("output"))return{id:Q.id}}let m;const b=Se=>{const Q=Se&&p(Se);Q&&(m=void 0,setTimeout(()=>{m?.id!==Q.id&&us("outputBlur",Q)},0))},v=Se=>Se.tagName.toLowerCase()==="input"||Se.tagName.toLowerCase()==="textarea"||"editContext"in Se&&!!Se.editContext,w=Se=>{m=p(Se);const Q=window.document.activeElement;if(!Q)return;const he=m?.id;he&&(v(Q)||Q.tagName==="SELECT")&&(us("outputInputFocus",{inputFocused:!0,id:he}),Q.addEventListener("blur",()=>{us("outputInputFocus",{inputFocused:!1,id:he})},{once:!0}))},y=Se=>{if(!Se||!Se.view||!Se.view.document)return;const Q=m=p(Se);for(const he of Se.composedPath())if(he instanceof HTMLAnchorElement&&he.href){if(he.href.startsWith("blob:"))Q&&us("outputFocus",Q),z(he.href,he.download);else if(he.href.startsWith("data:"))Q&&us("outputFocus",Q),H(he.href,he.download);else if(he.getAttribute("href")?.trim().startsWith("#")){if(!he.hash){us("scroll-to-reveal",{scrollTop:0});return}const $e=he.hash.substring(1);let qe=Se.view.document.getElementById($e);if(!qe){for(const ai of Se.view.document.querySelectorAll(".preview"))if(qe=ai.shadowRoot?.getElementById($e),qe)break}if(qe){const ai=qe.getBoundingClientRect().top+Se.view.scrollY;us("scroll-to-reveal",{scrollTop:ai});return}}else{const $e=he.getAttribute("href");$e&&($e.startsWith("command:")&&Q&&us("outputFocus",Q),us("clicked-link",{href:$e}))}Se.preventDefault(),Se.stopPropagation();return}Q&&us("outputFocus",Q)},S=()=>{const Se=window.getSelection();Se&&Se.removeAllRanges()},k=Se=>{const Q=window.getSelection();if(!Q)return;const he=window.document.getElementById(Se);if(!he)return;Q.removeAllRanges();const $e=document.createRange();$e.selectNode(he),Q.addRange($e)},I=Se=>{if(!window.document.getElementById(Se))return;const he=window.document.activeElement;he&&v(he)&&he.select()},M=Se=>{if(!m?.id||!Se.shiftKey)return;if(Se.shiftKey&&(Se.code==="ArrowUp"||Se.code==="ArrowDown")){Se.stopPropagation();return}if(!(Se.code==="PageUp"||Se.code==="PageDown")&&!(Se.metaKey&&(Se.code==="ArrowDown"||Se.code==="ArrowUp")))return;const Q=window.document.getElementById(m.id),he=window.getSelection();if(!Q||!he?.anchorNode)return;const $e=window.document.activeElement;if($e&&v($e))return;Se.stopPropagation(),Se.preventDefault();const{anchorNode:qe,anchorOffset:ai}=he,jt=document.createRange();Se.code==="PageDown"||Se.code==="ArrowDown"?(jt.setStart(qe,ai),jt.setEnd(Q,1)):(jt.setStart(Q,0),jt.setEnd(qe,ai)),he.removeAllRanges(),he.addRange(jt)},$=Se=>{if(!m?.id)return;const Q=window.document.activeElement;if(!(Q&&v(Q))&&(Se.key==="a"&&Se.ctrlKey||Se.metaKey&&Se.key==="a")){Se.preventDefault();return}},H=async(Se,Q)=>{us("clicked-data-url",{data:Se,downloadName:Q})},z=async(Se,Q)=>{try{const $e=await(await fetch(Se)).blob(),qe=new FileReader;qe.addEventListener("load",()=>{H(qe.result,Q)}),qe.readAsDataURL($e)}catch(he){console.error(he.message)}};window.document.body.addEventListener("click",y),window.document.body.addEventListener("focusin",w),window.document.body.addEventListener("focusout",b),window.document.body.addEventListener("keydown",M),window.document.body.addEventListener("keydown",$);function q(){return Object.freeze({onDidReceiveKernelMessage:Lb.event,postKernelMessage:Se=>us("customKernelMessage",{message:Se})})}async function te(Se){try{return await ae(Se)}catch(Q){throw console.error(Q),Q}}async function ae(Se){const Q=await __import(Se);if(!Q.activate){console.error(`Notebook preload '${Se}' was expected to be a module but it does not export an 'activate' function`);return}return Q.activate(q())}const Z=new class{constructor(){this.c=new Map}updateHeight(Se,Q,he){this.c.size||setTimeout(()=>{this.updateImmediately()},0);const $e=this.c.get(Se);$e&&$e.isOutput?this.c.set(Se,{id:Se,height:Q,init:$e.init,isOutput:$e.isOutput}):this.c.set(Se,{id:Se,height:Q,...he})}updateImmediately(){this.c.size&&(us("dimension",{updates:Array.from(this.c.values())}),this.c.clear())}};function ue(Se){return Se>2.1}const we=new class{constructor(){this.f=new WeakMap,this.c=new ResizeObserver(Se=>{for(const Q of Se){if(!window.document.body.contains(Q.target))continue;const he=this.f.get(Q.target);if(!he||(this.j(he.cellId),Q.target.id!==he.id)||!Q.contentRect)continue;if(!he.output){this.h(he,Q.target.offsetHeight);continue}const $e=ue(Q.contentRect.height);$e&&he.lastKnownPadding===0||!$e&&he.lastKnownPadding!==0?window.requestAnimationFrame(()=>{$e?Q.target.style.padding=`${i.style.outputNodePadding}px ${i.style.outputNodePadding}px ${i.style.outputNodePadding}px ${i.style.outputNodeLeftPadding}px`:Q.target.style.padding="0px",this.h(he,$e?Q.target.offsetHeight:0)}):this.h(he,$e?Q.target.offsetHeight:0)}})}h(Se,Q){Se.lastKnownHeight!==Q&&(Se.lastKnownHeight=Q,Z.updateHeight(Se.id,Q,{isOutput:Se.output}))}observe(Se,Q,he,$e){this.f.has(Se)||(this.f.set(Se,{id:Q,output:he,lastKnownPadding:i.style.outputNodePadding,lastKnownHeight:-1,cellId:$e}),this.c.observe(Se))}j(Se){clearTimeout(this.g),this.g=setTimeout(()=>{us("outputResized",{cellId:Se})},250)}};let ye,De,He,Qe;function Ne(Se,Q){if(He=Se,Q===void 0)return Qe=Date.now(),ye=void 0,Se.setAttribute("recentlyScrolled","true"),clearTimeout(De),De=setTimeout(()=>{He?.removeAttribute("recentlyScrolled")},300),!0;if(Se.hasAttribute("recentlyScrolled")){if(Qe&&Date.now()-Qe>400){if(ye&&Q<0&&Q<ye-8)return clearTimeout(De),He?.removeAttribute("recentlyScrolled"),!1;if(ye&&Q>0&&Q>ye+8)return clearTimeout(De),He?.removeAttribute("recentlyScrolled"),!1;clearTimeout(De),De=setTimeout(()=>{He?.removeAttribute("recentlyScrolled")},50)}else clearTimeout(De),De=setTimeout(()=>{He?.removeAttribute("recentlyScrolled")},300);return ye=Q,!0}return!1}function ri(Se){for(let Q=Se.target;Q;Q=Q.parentNode){if(!(Q instanceof Element)||Q.id==="container"||Q.classList.contains("cell_container")||Q.classList.contains("markup")||Q.classList.contains("output_container"))return!1;if(Se.deltaY<0&&Q.scrollTop>0)return Ne(Q),!0;if(Se.deltaY>0&&Q.scrollTop+Q.clientHeight<Q.scrollHeight){if(Q.scrollHeight-Q.scrollTop-Q.clientHeight<2||window.getComputedStyle(Q).overflowY==="hidden"||window.getComputedStyle(Q).overflowY==="visible")continue;return Ne(Q),!0}if(Ne(Q,Se.deltaY))return!0}return!1}const Fi=Se=>{Se.defaultPrevented||ri(Se)||us("did-scroll-wheel",{payload:{deltaMode:Se.deltaMode,deltaX:Se.deltaX,deltaY:Se.deltaY,deltaZ:Se.deltaZ,wheelDelta:Se.wheelDelta&&t?Se.wheelDelta/window.devicePixelRatio:Se.wheelDelta,wheelDeltaX:Se.wheelDeltaX&&t?Se.wheelDeltaX/window.devicePixelRatio:Se.wheelDeltaX,wheelDeltaY:Se.wheelDeltaY&&t?Se.wheelDeltaY/window.devicePixelRatio:Se.wheelDeltaY,detail:Se.detail,shiftKey:Se.shiftKey,type:Se.type}})};function ds(Se,Q){const he=window.document.getElementById(Se)??(Q?window.document.getElementById(Q):void 0);if(he){if(he.contains(window.document.activeElement))return;const $e=he.id;let qe=he.querySelector('[tabindex="0"], [href], button, input, option, select, textarea');if(!qe)qe=he,qe.tabIndex=-1,us("outputInputFocus",{inputFocused:!1,id:$e});else{const ai=v(qe);us("outputInputFocus",{inputFocused:ai,id:$e})}m=he,us("outputFocus",{id:he.id}),qe.focus()}}function Zi(Se,Q){const he=document.createElement("div");return he.id=`focus-sink-${Se}`,he.tabIndex=0,he.addEventListener("focus",()=>{us("focus-editor",{cellId:Se,focusNext:Q})}),he}function Dr(Se,Q="mark",he={}){function $e(As){if(!As.startContainer.ownerDocument)return[];if(As.startContainer.nodeType===Node.TEXT_NODE&&As.startOffset>0){const cg=As.startContainer,H$=As.endOffset,JM=cg.splitText(As.startOffset);As.endContainer===cg&&As.setEnd(JM,H$-As.startOffset),As.setStart(JM,0)}As.endContainer.nodeType===Node.TEXT_NODE&&As.endOffset<As.endContainer.length&&As.endContainer.splitText(As.endOffset);const lr=As.startContainer.ownerDocument.createTreeWalker(As.commonAncestorContainer,NodeFilter.SHOW_TEXT,cg=>As.intersectsNode(cg)?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_REJECT);lr.currentNode=As.startContainer;const qo=[];for(lr.currentNode.nodeType===Node.TEXT_NODE&&qo.push(lr.currentNode);lr.nextNode()&&As.comparePoint(lr.currentNode,0)!==1;)lr.currentNode.nodeType===Node.TEXT_NODE&&qo.push(lr.currentNode);return qo}function qe(As,lr,qo){const cg=As.ownerDocument.createElement(lr);Object.keys(qo).forEach(JM=>{cg.setAttribute(JM,qo[JM])});const H$=As.ownerDocument.createRange();return H$.selectNode(As),H$.surroundContents(cg),cg}if(Se.collapsed)return{remove:()=>{},update:()=>{}};const ai=$e(Se),jt=[];for(const As in ai){const lr=qe(ai[As],Q,he);jt.push(lr)}function fs(As){if(As.childNodes.length===1)As.parentNode?.replaceChild(As.firstChild,As);else{for(;As.firstChild;)As.parentNode?.insertBefore(As.firstChild,As);As.remove()}}function nn(){for(const As in jt)fs(jt[As])}function hn(As,lr={}){Object.keys(lr).forEach(qo=>{As.setAttribute(qo,lr[qo])})}function wr(As){for(const lr in jt)hn(jt[lr],As)}return{remove:nn,update:wr}}function cl(Se){const Q=window.getSelection();if(Q)try{Q.removeAllRanges();const he=document.createRange();he.setStart(Se.startContainer,Se.startOffset),he.setEnd(Se.endContainer,Se.endOffset),Q.addRange(he)}catch(he){console.log(he)}}function og(Se,Q,he="mark",$e={}){if(Q){const qe=Dr(Se,he,$e);return{range:Se,dispose:qe.remove,update:(ai,jt)=>{jt===void 0?qe.update({style:`background-color: ${ai}`}):qe.update({class:jt})}}}else{window.document.execCommand("hiliteColor",!1,Jd);const qe=window.getSelection().getRangeAt(0).cloneRange(),ai={collapsed:qe.collapsed,commonAncestorContainer:qe.commonAncestorContainer,endContainer:qe.endContainer,endOffset:qe.endOffset,startContainer:qe.startContainer,startOffset:qe.startOffset};return{range:ai,dispose:()=>{cl(ai);try{document.designMode="On",window.document.execCommand("removeFormat",!1,void 0),document.designMode="Off",window.getSelection()?.removeAllRanges()}catch(jt){console.log(jt)}},update:(jt,fs)=>{cl(ai);try{document.designMode="On",window.document.execCommand("removeFormat",!1,void 0),window.document.execCommand("hiliteColor",!1,jt),document.designMode="Off",window.getSelection()?.removeAllRanges()}catch(nn){console.log(nn)}}}}}function Co(Se=()=>{}){const Q=new Set;return{fire(he){for(const $e of[...Q])$e.fn.call($e.thisArg,he)},event(he,$e,qe){const ai={fn:he,thisArg:$e},jt={dispose:()=>{Q.delete(ai),Se(Q)}};return Q.add(ai),Se(Q),qe instanceof Array?qe.push(jt):qe&&qe.add(jt),jt}}}function Yh(Se,Q,he){Q.innerText=Se;const $e=document.createElement("ul");for(const qe of he){console.error(qe);const ai=document.createElement("li");ai.innerText=qe.message,$e.appendChild(ai)}Q.appendChild($e)}const ag=new class{constructor(){this.c=0,this.f=new Map}getOutputItem(Se,Q){const he=this.c++,{promise:$e,resolve:qe}=r();return this.f.set(he,{resolve:qe}),us("getOutputItem",{requestId:he,outputId:Se,mime:Q}),$e}resolveOutputItem(Se,Q){const he=this.f.get(Se);he&&(this.f.delete(Se),he.resolve(Q))}};let bf=!1;function Zr(Se,Q,he,$e,qe,ai){function jt(wr,As,lr,qo,cg){return Object.freeze({id:wr,mime:As,metadata:lr,appendedText(){if(cg)return n.decode(cg.valueBytes)},data(){return qo},text(){return n.decode(qo)},json(){return JSON.parse(this.text())},blob(){return new Blob([qo],{type:this.mime})},get _allOutputItems(){return bf||(bf=!0,console.warn("'_allOutputItems' is proposed API. DO NOT ship an extension that depends on it!")),nn}})}const fs=new Map,nn=Object.freeze(qe.map(wr=>{const As=wr.mime;return Object.freeze({mime:As,getItem(){const lr=fs.get(As);if(lr)return lr;const qo=ag.getOutputItem(Se,As).then(cg=>cg?jt(Se,cg.mime,he,cg.valueBytes):void 0);return fs.set(As,qo),qo}})})),hn=jt(Se,Q,he,$e,ai);return fs.set(Q,Promise.resolve(hn)),hn}const Lb=Co(),om=window.trustedTypes?.createPolicy("notebookRenderer",{createHTML:Se=>Se,createScript:Se=>Se});window.addEventListener("wheel",Fi);const Jd=window.getComputedStyle(window.document.getElementById("_defaultColorPalatte")).color,am=window.getComputedStyle(window.document.getElementById("_defaultColorPalatte")).backgroundColor;class Bv{constructor(){this.c=new Map}addHighlights(Q,he){for(let qe=Q.length-1;qe>=0;qe--){const ai=Q[qe],jt=og(ai.originalRange,!0,"mark",ai.isShadow?{style:"background-color: "+Jd+";"}:{class:"find-match"});ai.highlightResult=jt}const $e={matches:Q,currentMatchIndex:-1};this.c.set(he,$e)}removeHighlights(Q){this.c.get(Q)?.matches.forEach(he=>{he.highlightResult?.dispose()}),this.c.delete(Q)}highlightCurrentMatch(Q,he){const $e=this.c.get(he);if(!$e){console.error("Modified current highlight match before adding highlight list.");return}const qe=$e.matches[$e.currentMatchIndex];qe?.highlightResult?.update(Jd,qe.isShadow?void 0:"find-match");const ai=$e.matches[Q];$e.currentMatchIndex=Q;const jt=window.getSelection();if(ai&&jt&&ai.highlightResult){let fs=0;try{const nn=window.document.getElementById(ai.id).getBoundingClientRect().top,hn=document.createRange();hn.selectNode(ai.highlightResult.range.startContainer),ai.highlightResult.range.startContainer.parentElement?.scrollIntoView({behavior:"auto",block:"end",inline:"nearest"});const wr=hn.getBoundingClientRect().top;hn.detach(),fs=wr-nn}catch(nn){console.error(nn)}ai.highlightResult?.update(am,ai.isShadow?void 0:"current-find-match"),window.document.getSelection()?.removeAllRanges(),us("didFindHighlightCurrent",{offset:fs})}}unHighlightCurrentMatch(Q,he){const $e=this.c.get(he);if(!$e)return;const qe=$e.matches[Q];qe&&qe.highlightResult&&qe.highlightResult.update(Jd,qe.isShadow?void 0:"find-match")}dispose(){window.document.getSelection()?.removeAllRanges(),this.c.forEach(Q=>{Q.matches.forEach(he=>{he.highlightResult?.dispose()})})}}class ey{constructor(){this.c=new Map,this.f=new Highlight,this.f.priority=1,this.g=new Highlight,this.g.priority=2,CSS.highlights?.set("find-highlight",this.f),CSS.highlights?.set("current-find-highlight",this.g)}_refreshRegistry(Q=!0){Q&&this.f.clear(),this.g.clear(),this.c.forEach(he=>{if(Q)for(let $e=0;$e<he.matches.length;$e++)this.f.add(he.matches[$e].originalRange);he.currentMatchIndex<he.matches.length&&he.currentMatchIndex>=0&&this.g.add(he.matches[he.currentMatchIndex].originalRange)})}addHighlights(Q,he){for(let qe=0;qe<Q.length;qe++)this.f.add(Q[qe].originalRange);const $e={matches:Q,currentMatchIndex:-1};this.c.set(he,$e)}highlightCurrentMatch(Q,he){const $e=this.c.get(he);if(!$e){console.error("Modified current highlight match before adding highlight list.");return}$e.currentMatchIndex=Q;const qe=$e.matches[Q];if(qe){let ai=0;try{const jt=window.document.getElementById(qe.id).getBoundingClientRect().top;qe.originalRange.startContainer.parentElement?.scrollIntoView({behavior:"auto",block:"end",inline:"nearest"}),ai=qe.originalRange.getBoundingClientRect().top-jt,us("didFindHighlightCurrent",{offset:ai})}catch(jt){console.error(jt)}}this._refreshRegistry(!1)}unHighlightCurrentMatch(Q,he){const $e=this.c.get(he);$e&&($e.currentMatchIndex=-1)}removeHighlights(Q){this.c.delete(Q),this._refreshRegistry()}dispose(){window.document.getSelection()?.removeAllRanges(),this.g.clear(),this.f.clear()}}const Ov=CSS.highlights?new ey:new Bv;function Fv(Se){const he=Se.getRangeAt(0).cloneRange(),$e=Se.toString().length;Se.collapseToStart(),Se.modify("move","backward","lineboundary"),Se.modify("extend","forward","lineboundary");const qe=Se.toString(),ai=ox(Se.getRangeAt(0),he),jt={start:ai,end:ai+$e};return Se.removeAllRanges(),Se.addRange(he),{line:qe,range:jt}}function ox(Se,Q){const he=ty(Se.startContainer,Q.startContainer),$e=lm(he,Se.startContainer)+Se.startOffset;return lm(he,Q.startContainer)+Q.startOffset-$e}function ty(Se,Q){const he=new Range;return he.setStart(Se,0),he.setEnd(Q,0),he.commonAncestorContainer}function uh(Se){let Q=0;if(Se.nodeType===Node.TEXT_NODE)Q+=Se.textContent?.length||0;else for(const he of Se.childNodes)Q+=uh(he);return Q}function lm(Se,Q){if(!Q)return 0;let he=0;if(Q===Se||!Se.contains(Q))return he;let $e=Q.previousSibling;for(;$e;)he+=uh($e),$e=$e.previousSibling;return he+lm(Se,Q.parentNode)}const Xa=(Se,Q)=>{let he=!0,$e=[];const qe=document.createRange();qe.selectNodeContents(window.document.getElementById("findStart"));const ai=window.getSelection();ai?.removeAllRanges(),ai?.addRange(qe),mt.toggleDragDropEnabled(!1);try{for(document.designMode="On";he&&$e.length<500;)if(he=window.find(Se,!!Q.caseSensitive,!1,!1,!!Q.wholeWord,!0,!1),he){const jt=window.getSelection();if(!jt){console.log("no selection");break}if(Q.includeMarkup&&jt.rangeCount>0&&jt.getRangeAt(0).startContainer.nodeType===1&&jt.getRangeAt(0).startContainer.classList.contains("markup")){const nn=jt.anchorNode?.firstChild,hn=nn.shadowRoot,wr=hn?.getSelection?hn?.getSelection():null;wr&&wr.anchorNode&&$e.push({type:"preview",id:nn.id,cellId:nn.id,container:nn,isShadow:!0,originalRange:wr.getRangeAt(0),searchPreviewInfo:Q.shouldGetSearchPreviewInfo?Fv(wr):void 0})}if(Q.includeOutput&&jt.rangeCount>0&&jt.getRangeAt(0).startContainer.nodeType===1&&jt.getRangeAt(0).startContainer.classList.contains("output_container")){const nn=jt.getRangeAt(0).startContainer.parentElement.id,hn=jt.anchorNode?.firstChild,wr=hn.shadowRoot,As=wr?.getSelection?wr?.getSelection():null;As&&As.anchorNode&&$e.push({type:"output",id:hn.id,cellId:nn,container:hn,isShadow:!0,originalRange:As.getRangeAt(0),searchPreviewInfo:Q.shouldGetSearchPreviewInfo?Fv(As):void 0})}const fs=jt.anchorNode?.parentElement;if(fs){const nn=$e.length?$e[$e.length-1]:null;if(nn&&nn.container.contains(fs)&&Q.includeOutput)$e.push({type:nn.type,id:nn.id,cellId:nn.cellId,container:nn.container,isShadow:!1,originalRange:jt.getRangeAt(0),searchPreviewInfo:Q.shouldGetSearchPreviewInfo?Fv(jt):void 0});else for(let hn=fs;hn&&hn instanceof Element;hn=hn.parentElement){if(hn.classList.contains("output")&&Q.includeOutput){const wr=hn.parentElement?.parentElement?.id;wr&&$e.push({type:"output",id:hn.id,cellId:wr,container:hn,isShadow:!1,originalRange:jt.getRangeAt(0),searchPreviewInfo:Q.shouldGetSearchPreviewInfo?Fv(jt):void 0});break}if(hn.id==="container"||hn===window.document.body)break}}else break}}catch(jt){console.log(jt)}$e=$e.filter(jt=>Q.findIds.length?Q.findIds.includes(jt.cellId):!0),Ov.addHighlights($e,Q.ownerID),window.document.getSelection()?.removeAllRanges(),mt.toggleDragDropEnabled(o.dragAndDropEnabled),document.designMode="Off",us("didFind",{matches:$e.map((jt,fs)=>({type:jt.type,id:jt.id,cellId:jt.cellId,index:fs,searchPreviewInfo:jt.searchPreviewInfo}))})},Xd=async(Se,Q,he=5)=>{if(!window.document.hasFocus()&&he>0){setTimeout(()=>{Xd(Se,Q,he-1)},50);return}try{const $e=window.document.getElementById(Se)??window.document.getElementById(Q);let qe=$e?.querySelector("img");if(!qe){const ai=$e?.querySelector("svg.output-image")??$e?.querySelector("div.svgContainerStyle > svg");ai&&(qe=new Image,qe.src="data:image/svg+xml,"+encodeURIComponent(ai.outerHTML))}if(qe){const ai=qe;await navigator.clipboard.write([new ClipboardItem({"image/png":new Promise(jt=>{const fs=document.createElement("canvas");fs.width=ai.naturalWidth,fs.height=ai.naturalHeight,fs.getContext("2d").drawImage(ai,0,0),fs.toBlob(hn=>{hn?jt(hn):console.error("No blob data to write to clipboard"),fs.remove()},"image/png")})})])}else console.error("Could not find image element to copy for output with id",Se)}catch($e){console.error("Could not copy image:",$e)}};window.addEventListener("message",async Se=>{const Q=Se;switch(Q.data.type){case"initializeMarkup":{try{await Promise.all(Q.data.cells.map(he=>mt.ensureMarkupCell(he)))}finally{Z.updateImmediately(),us("initializedMarkup",{requestId:Q.data.requestId})}break}case"createMarkupCell":mt.ensureMarkupCell(Q.data.cell);break;case"showMarkupCell":mt.showMarkupCell(Q.data.id,Q.data.top,Q.data.content,Q.data.metadata);break;case"hideMarkupCells":for(const he of Q.data.ids)mt.hideMarkupCell(he);break;case"unhideMarkupCells":for(const he of Q.data.ids)mt.unhideMarkupCell(he);break;case"deleteMarkupCell":for(const he of Q.data.ids)mt.deleteMarkupCell(he);break;case"updateSelectedMarkupCells":mt.updateSelectedCells(Q.data.selectedCellIds);break;case"html":{const he=Q.data;he.createOnIdle?lg.enqueueIdle(he.outputId,$e=>mt.renderOutputCell(he,$e)):lg.enqueue(he.outputId,$e=>mt.renderOutputCell(he,$e));break}case"view-scroll":{Q.data.widgets.forEach(he=>{lg.enqueue(he.outputId,()=>{mt.updateOutputsScroll([he])})}),mt.updateMarkupScrolls(Q.data.markupCells);break}case"clear":Oe.clearAll(),mt.clearAll(),window.document.getElementById("container").innerText="";break;case"clearOutput":{const{cellId:he,rendererId:$e,outputId:qe}=Q.data;lg.cancelOutput(qe),mt.clearOutput(he,qe,$e);break}case"hideOutput":{const{cellId:he,outputId:$e}=Q.data;lg.enqueue($e,()=>{mt.hideOutput(he)});break}case"showOutput":{const{outputId:he,cellTop:$e,cellId:qe,content:ai}=Q.data;lg.enqueue(he,()=>{mt.showOutput(qe,he,$e),ai&&mt.updateAndRerender(qe,he,ai)});break}case"copyImage":{await Xd(Q.data.outputId,Q.data.altOutputId);break}case"ack-dimension":{for(const{cellId:he,outputId:$e,height:qe}of Q.data.updates)mt.updateOutputHeight(he,$e,qe);break}case"preload":{const he=Q.data.resources;for(const{uri:$e}of he)iy.load($e);break}case"updateRenderers":{const{rendererData:he}=Q.data;Oe.updateRendererData(he);break}case"focus-output":ds(Q.data.cellOrOutputId,Q.data.alternateId);break;case"blur-output":S();break;case"select-output-contents":k(Q.data.cellOrOutputId);break;case"select-input-contents":I(Q.data.cellOrOutputId);break;case"decorations":{let he=window.document.getElementById(Q.data.cellId);he||(mt.ensureOutputCell(Q.data.cellId,-1e5,!0),he=window.document.getElementById(Q.data.cellId)),he?.classList.add(...Q.data.addedClassNames),he?.classList.remove(...Q.data.removedClassNames);break}case"markupDecorations":{const he=window.document.getElementById(Q.data.cellId);he&&(he?.classList.add(...Q.data.addedClassNames),he?.classList.remove(...Q.data.removedClassNames));break}case"customKernelMessage":Lb.fire(Q.data.message);break;case"customRendererMessage":Oe.getRenderer(Q.data.rendererId)?.receiveMessage(Q.data.message);break;case"notebookStyles":{const he=window.document.documentElement.style;for(let $e=he.length-1;$e>=0;$e--){const qe=he[$e];qe&&qe.startsWith("--notebook-")&&he.removeProperty(qe)}for(const[$e,qe]of Object.entries(Q.data.styles))he.setProperty(`--${$e}`,qe);break}case"notebookOptions":o=Q.data.options,mt.toggleDragDropEnabled(o.dragAndDropEnabled),l=Q.data.renderOptions,c.fire(l);break;case"tokenizedCodeBlock":{const{codeBlockId:he,html:$e}=Q.data;Tt.highlightCodeBlock(he,$e);break}case"tokenizedStylesChanged":{f.replaceSync(Q.data.css);break}case"find":{Ov.removeHighlights(Q.data.options.ownerID),Xa(Q.data.query,Q.data.options);break}case"findHighlightCurrent":{Ov?.highlightCurrentMatch(Q.data.index,Q.data.ownerID);break}case"findUnHighlightCurrent":{Ov?.unHighlightCurrentMatch(Q.data.index,Q.data.ownerID);break}case"findStop":{Ov.removeHighlights(Q.data.ownerID);break}case"returnOutputItem":ag.resolveOutputItem(Q.data.requestId,Q.data.output)}});const V$="vscode.fallbackToNextRenderer";class wV{constructor(Q){this.data=Q,this.c=Co()}receiveMessage(Q){this.c.fire(Q)}async renderOutputItem(Q,he,$e){try{await this.j()}catch(qe){$e.aborted||Yh(`Error loading renderer '${this.data.id}'`,he,qe instanceof Error?[qe]:[]);return}if(!this.g){$e.aborted||Yh(`Renderer '${this.data.id}' does not implement renderOutputItem`,he,[]);return}try{const qe=performance.now();await this.g.renderOutputItem(Q,he,$e),this.l("Rendered output item",{id:Q.id,duration:`${performance.now()-qe}ms`})}catch(qe){if($e.aborted)return;if(qe instanceof Error&&qe.name===V$)throw qe;Yh(`Error rendering output item using '${this.data.id}'`,he,qe instanceof Error?[qe]:[]),this.l("Rendering output item failed",{id:Q.id,error:qe+""})}}disposeOutputItem(Q){this.g?.disposeOutputItem?.(Q)}h(){const{id:Q,messaging:he}=this.data,$e={setState:qe=>u.setState({...u.getState(),[Q]:qe}),getState:()=>{const qe=u.getState();return typeof qe=="object"&&qe?qe[Q]:void 0},getRenderer:async qe=>{const ai=Oe.getRenderer(qe);if(ai)return ai.g?ai.g:ai.j()},workspace:{get isTrusted(){return a}},settings:{get lineLimit(){return l.lineLimit},get outputScrolling(){return l.outputScrolling},get outputWordWrap(){return l.outputWordWrap},get linkifyFilePaths(){return l.linkifyFilePaths},get minimalError(){return l.minimalError}},get onDidChangeSettings(){return c.event}};return he&&($e.onDidReceiveMessage=this.c.event,$e.postMessage=qe=>us("customRendererMessage",{rendererId:Q,message:qe})),Object.freeze($e)}j(){return this.f??=this.k(),this.f}async k(){this.l("Start loading renderer");try{await iy.waitForAllCurrent();const Q=performance.now(),he=await __import(this.data.entrypoint.path);if(this.l("Imported renderer",{duration:`${performance.now()-Q}ms`}),!he)return;this.g=await he.activate(this.h()),this.l("Activated renderer",{duration:`${performance.now()-Q}ms`});const $e=i.rendererData.filter(qe=>qe.entrypoint.extends===this.data.id);return $e.length&&this.l("Activating dependant renderers",{dependents:$e.map(qe=>qe.id).join(", ")}),await Promise.all($e.map(async qe=>{const ai=Oe.getRenderer(qe.id);if(!ai)throw new Error(`Could not find extending renderer: ${qe.id}`);try{return await ai.j()}catch(jt){console.error(jt),this.l("Activating dependant renderer failed",{dependent:qe.id,error:jt+""});return}})),this.g}catch(Q){throw this.l("Loading renderer failed"),Q}}l(Q,he){us("logRendererDebugMessage",{message:`[renderer ${this.data.id}] - ${Q}`,data:he})}}const iy=new class{constructor(){this.c=new Map}waitFor(Se){return this.c.get(Se)||Promise.resolve(new Error(`Preload not ready: ${Se}`))}load(Se){const Q=Promise.all([te(Se),this.waitForAllCurrent()]);return this.c.set(Se,Q),Q}waitForAllCurrent(){return Promise.all([...this.c.values()].map(Se=>Se.catch(Q=>Q)))}},lg=new class{constructor(){this.c=new Map,this.f=new Map}enqueue(Se,Q){this.f.get(Se)?.dispose(),this.f.delete(Se);const he=this.c.get(Se);if(he)he.queue=he.queue.then(async $e=>{he.abort.signal.aborted||await Q(he.abort.signal)});else{const $e=new AbortController;this.c.set(Se,{abort:$e,queue:new Promise(qe=>qe(Q($e.signal)))})}}enqueueIdle(Se,Q){this.f.get(Se)?.dispose(),lg.f.set(Se,g(()=>{lg.enqueue(Se,Q),lg.f.delete(Se)}))}cancelAll(){this.f.forEach(Se=>Se.dispose()),this.f.clear();for(const{abort:Se}of this.c.values())Se.abort();this.c.clear()}cancelOutput(Se){this.f.get(Se)?.dispose(),this.f.delete(Se);const Q=this.c.get(Se);Q&&(Q.abort.abort(),this.c.delete(Se))}},Oe=new class{constructor(){this.c=new Map;for(const Se of i.rendererData)this.g(Se)}getRenderer(Se){return this.c.get(Se)}f(Se,Q){if(Se.id!==Q.id||Se.entrypoint.path!==Q.entrypoint.path||Se.entrypoint.extends!==Q.entrypoint.extends||Se.messaging!==Q.messaging||Se.mimeTypes.length!==Q.mimeTypes.length)return!1;for(let he=0;he<Se.mimeTypes.length;he++)if(Se.mimeTypes[he]!==Q.mimeTypes[he])return!1;return!0}updateRendererData(Se){const Q=new Set(this.c.keys()),he=new Set(Se.map($e=>$e.id));for(const $e of Se){const qe=this.c.get($e.id);qe&&this.f(qe.data,$e)||this.g($e)}for(const $e of Q)he.has($e)||this.c.delete($e)}g(Se){this.c.set(Se.id,new wV(Se))}clearAll(){lg.cancelAll();for(const Se of this.c.values())Se.disposeOutputItem()}clearOutput(Se,Q){lg.cancelOutput(Q),this.c.get(Se)?.disposeOutputItem(Q)}async render(Se,Q,he,$e){const qe=this.j(Q,Se);if(!qe){const jt=(window.document.documentElement.style.getPropertyValue("--notebook-cell-renderer-not-found-error")||"").replace("$0",()=>Se.mime);this.k(Se,he,jt);return}if(!(await this.h(Se,he,qe,$e)).continue)return;for(const jt of Se._allOutputItems){if(jt.mime===Se.mime)continue;const fs=await jt.getItem();if($e.aborted)return;if(fs){const nn=this.j(void 0,fs);if(nn&&!(await this.h(fs,he,nn,$e)).continue)return}}const ai=(window.document.documentElement.style.getPropertyValue("--notebook-cell-renderer-fallbacks-exhausted")||"").replace("$0",()=>Se.mime);this.k(Se,he,ai)}async h(Se,Q,he,$e){try{return await he.renderOutputItem(Se,Q,$e),{continue:!1}}catch(qe){if($e.aborted)return{continue:!1};if(qe instanceof Error&&qe.name===V$)return{continue:!0};throw qe}}j(Se,Q){let he;if(typeof Se=="string")he=Array.from(this.c.values()).find($e=>$e.data.id===Se);else{const $e=Array.from(this.c.values()).filter(qe=>qe.data.mimeTypes.includes(Q.mime)&&!qe.data.entrypoint.extends);$e.length&&($e.sort((qe,ai)=>+qe.data.isBuiltin-+ai.data.isBuiltin),he=$e[0])}return he}k(Se,Q,he){const $e=document.createElement("div"),qe=document.createElement("div");qe.className="no-renderer-error",qe.innerText=he;const ai=document.createElement("div");ai.innerText=Se.text(),$e.appendChild(qe),$e.appendChild(ai),Q.innerText="",Q.appendChild($e)}},mt=new class{constructor(){this.c=new Map,this.f=new Map}clearAll(){for(const Q of this.c.values())Q.dispose();this.c.clear();for(const Q of this.f.values())Q.dispose();this.f.clear()}async g(Q,he,$e){const qe=this.c.get(Q.cellId);if(qe)return console.error(`Trying to create markup that already exists: ${Q.cellId}`),qe;const ai=new Ds(Q.cellId,Q.mime,Q.content,he,Q.metadata);return ai.element.style.visibility=$e?"":"hidden",this.c.set(Q.cellId,ai),await ai.ready,ai}async ensureMarkupCell(Q){let he=this.c.get(Q.cellId);he?(he.element.style.visibility=Q.visible?"":"hidden",await he.updateContentAndRender(Q.content,Q.metadata)):he=await this.g(Q,Q.offset,Q.visible)}deleteMarkupCell(Q){const he=this.h(Q);he&&(he.remove(),he.dispose(),this.c.delete(Q))}async updateMarkupContent(Q,he,$e){await this.h(Q)?.updateContentAndRender(he,$e)}showMarkupCell(Q,he,$e,qe){this.h(Q)?.show(he,$e,qe)}hideMarkupCell(Q){this.h(Q)?.hide()}unhideMarkupCell(Q){this.h(Q)?.unhide()}h(Q){const he=this.c.get(Q);if(!he){console.log(`Could not find markup cell '${Q}'`);return}return he}updateSelectedCells(Q){const he=new Set(Q);for(const $e of this.c.values())$e.setSelected(he.has($e.id))}toggleDragDropEnabled(Q){for(const he of this.c.values())he.toggleDragDropEnabled(Q)}updateMarkupScrolls(Q){for(const{id:he,top:$e}of Q){const qe=this.c.get(he);qe&&(qe.element.style.top=`${$e}px`)}}async renderOutputCell(Q,he){const $e=await Promise.all(Q.requiredPreloads.map(ai=>iy.waitFor(ai.uri).then(()=>{},jt=>jt)));return he.aborted?void 0:this.ensureOutputCell(Q.cellId,Q.cellTop,!1).renderOutputElement(Q,$e,he)}ensureOutputCell(Q,he,$e){let qe=this.f.get(Q);const ai=!!qe;return qe||(qe=new Pn(Q),this.f.set(Q,qe)),ai&&$e||(qe.element.style.top=he+"px"),qe}clearOutput(Q,he,$e){this.f.get(Q)?.clearOutput(he,$e)}showOutput(Q,he,$e){this.f.get(Q)?.show(he,$e)}updateAndRerender(Q,he,$e){this.f.get(Q)?.updateContentAndRerender(he,$e)}hideOutput(Q){this.f.get(Q)?.hide()}updateOutputHeight(Q,he,$e){this.f.get(Q)?.updateOutputHeight(he,$e)}updateOutputsScroll(Q){for(const he of Q)this.f.get(he.cellId)?.updateScroll(he)}};class Tt{static{this.c=new Map}static highlightCodeBlock(Q,he){const $e=Tt.c.get(Q);if(!$e)return;const qe=om?.createHTML(he)??he;$e.innerHTML=qe;const ai=$e.getRootNode();ai instanceof ShadowRoot&&(ai.adoptedStyleSheets.includes(f)||ai.adoptedStyleSheets.push(f))}static requestHighlightCodeBlock(Q){const he=[];let $e=0;for(const qe of Q.querySelectorAll(".vscode-code-block")){const ai=qe.getAttribute("data-vscode-code-block-lang");if(qe.textContent&&ai){const jt=`${Date.now()}-${$e++}`;he.push({value:qe.textContent,lang:ai,id:jt}),Tt.c.set(jt,qe)}}return he}}class Ds{constructor(Q,he,$e,qe,ai){this.g=!1;const jt=this;this.id=Q,this.f={value:$e,version:0,metadata:ai};const{promise:fs,resolve:nn,reject:hn}=r();this.ready=fs;let wr;this.c=Object.freeze({id:Q,mime:he,get metadata(){return jt.f.metadata},text:()=>this.f.value,json:()=>{},data:()=>{if(wr?.version===this.f.version)return wr.value;const qo=s.encode(this.f.value);return wr={version:this.f.version,value:qo},qo},blob(){return new Blob([this.data()],{type:this.mime})},_allOutputItems:[{mime:he,getItem:async()=>this.c}]});const As=window.document.getElementById("container"),lr=document.createElement("div");lr.className="markup",lr.style.position="absolute",lr.style.width="100%",this.element=document.createElement("div"),this.element.id=this.id,this.element.classList.add("preview"),this.element.style.position="absolute",this.element.style.top=qe+"px",this.toggleDragDropEnabled(o.dragAndDropEnabled),lr.appendChild(this.element),As.appendChild(lr),this.j(),this.updateContentAndRender(this.f.value,this.f.metadata).then(()=>{this.g||we.observe(this.element,this.id,!1,this.id),nn()},()=>hn())}dispose(){this.g=!0,this.h?.abort(),this.h=void 0}j(){this.element.addEventListener("dblclick",()=>{us("toggleMarkupPreview",{cellId:this.id})}),this.element.addEventListener("click",Q=>{us("clickMarkupCell",{cellId:this.id,altKey:Q.altKey,ctrlKey:Q.ctrlKey,metaKey:Q.metaKey,shiftKey:Q.shiftKey})}),this.element.addEventListener("contextmenu",Q=>{us("contextMenuMarkupCell",{cellId:this.id,clientX:Q.clientX,clientY:Q.clientY})}),this.element.addEventListener("mouseenter",()=>{us("mouseEnterMarkupCell",{cellId:this.id})}),this.element.addEventListener("mouseleave",()=>{us("mouseLeaveMarkupCell",{cellId:this.id})}),this.element.addEventListener("dragstart",Q=>{pc.startDrag(Q,this.id)}),this.element.addEventListener("drag",Q=>{pc.updateDrag(Q,this.id)}),this.element.addEventListener("dragend",Q=>{pc.endDrag(Q,this.id)})}async updateContentAndRender(Q,he){this.f={value:Q,version:this.f.version+1,metadata:he},this.h?.abort();const $e=new AbortController;this.h=$e;try{await Oe.render(this.c,void 0,this.element,this.h.signal)}finally{this.h===$e&&(this.h=void 0)}const qe=this.element.shadowRoot??this.element,ai=[];for(const fs of qe.children)switch(fs.tagName){case"LINK":case"SCRIPT":case"STYLE":break;default:ai.push(fs.outerHTML);break}const jt=Tt.requestHighlightCodeBlock(qe);us("renderedMarkup",{cellId:this.id,html:ai.join(""),codeBlocks:jt}),Z.updateHeight(this.id,this.element.offsetHeight,{isOutput:!1})}show(Q,he,$e){this.element.style.visibility="",this.element.style.top=`${Q}px`,typeof he=="string"||$e?this.updateContentAndRender(he??this.f.value,$e??this.f.metadata):this.k()}hide(){this.element.style.visibility="hidden"}unhide(){this.element.style.visibility="",this.k()}remove(){this.element.remove()}async k(){Z.updateHeight(this.id,this.element.offsetHeight,{isOutput:!1})}setSelected(Q){this.element.classList.toggle("selected",Q)}toggleDragDropEnabled(Q){Q?(this.element.classList.add("draggable"),this.element.setAttribute("draggable","true")):(this.element.classList.remove("draggable"),this.element.removeAttribute("draggable"))}}class Pn{constructor(Q){this.c=new Map;const he=window.document.getElementById("container"),$e=Zi(Q);he.appendChild($e),this.element=document.createElement("div"),this.element.style.position="absolute",this.element.style.outline="0",this.element.id=Q,this.element.classList.add("cell_container"),he.appendChild(this.element),this.element=this.element;const qe=Zi(Q,!0);he.appendChild(qe)}dispose(){for(const Q of this.c.values())Q.dispose();this.c.clear()}f(Q){let he=this.c.get(Q.outputId);return he||(he=new fh(Q.outputId),this.element.appendChild(he.element),this.c.set(Q.outputId,he)),he.createOutputElement(Q.outputId,Q.outputOffset,Q.left,Q.cellId)}async renderOutputElement(Q,he,$e){const qe=Date.now(),ai=this.f(Q);if(await ai.render(Q.content,Q.rendererId,he,$e),ai.element.style.visibility=Q.initiallyHidden?"hidden":"",Q.executionId&&Q.rendererId){let jt;Q.content.type===1&&(jt=Q.content.output.valueBytes.length),jt!==void 0&&jt>0&&jt<100*1024&&us("notebookPerformanceMessage",{cellId:Q.cellId,executionId:Q.executionId,duration:Date.now()-qe,rendererId:Q.rendererId,outputSize:jt})}}clearOutput(Q,he){const $e=this.c.get(Q);$e?.clear(he),$e?.dispose(),this.c.delete(Q)}show(Q,he){this.c.get(Q)&&(this.element.style.visibility="",this.element.style.top=`${he}px`)}hide(){this.element.style.visibility="hidden"}updateContentAndRerender(Q,he){this.c.get(Q)?.updateContentAndRender(he)}updateOutputHeight(Q,he){this.c.get(Q)?.updateHeight(he)}updateScroll(Q){this.element.style.top=`${Q.cellTop}px`;const he=this.c.get(Q.outputId);he&&(he.updateScroll(Q.outputOffset),Q.forceDisplay&&he.outputNode&&(he.outputNode.element.style.visibility="")),Q.forceDisplay&&(this.element.style.visibility="")}}class fh{get outputNode(){return this.c}constructor(Q){this.f=Q,this.element=document.createElement("div"),this.element.classList.add("output_container"),this.element.setAttribute("data-vscode-context",JSON.stringify({preventDefaultContextMenuItems:!0})),this.element.style.position="absolute",this.element.style.overflow="hidden"}dispose(){this.c?.dispose()}clear(Q){Q&&Oe.clearOutput(Q,this.f),this.element.remove()}updateHeight(Q){this.element.style.maxHeight=`${Q}px`,this.element.style.height=`${Q}px`}updateScroll(Q){this.element.style.top=`${Q}px`}createOutputElement(Q,he,$e,qe){return this.element.innerText="",this.element.style.maxHeight="0px",this.element.style.top=`${he}px`,this.c?.dispose(),this.c=new yd(Q,$e,qe),this.element.appendChild(this.c.element),this.c}updateContentAndRender(Q){this.c?.updateAndRerender(Q)}}u.postMessage({__vscode_notebook_message:!0,type:"initialized"});for(const Se of i.staticPreloadsData)iy.load(Se.entrypoint);function us(Se,Q){u.postMessage({__vscode_notebook_message:!0,type:Se,...Q})}class yd{constructor(Q,he,$e){this.j=Q,this.cellId=$e,this.f=!1,this.h=!1,this.element=document.createElement("div"),this.element.id=Q,this.element.classList.add("output"),this.element.style.position="absolute",this.element.style.top="0px",this.element.style.left=he+"px",this.element.style.padding=`${i.style.outputNodePadding}px ${i.style.outputNodePadding}px ${i.style.outputNodePadding}px ${i.style.outputNodeLeftPadding}`,this.element.addEventListener("mouseenter",()=>{us("mouseenter",{id:Q})}),this.element.addEventListener("mouseleave",()=>{us("mouseleave",{id:Q})}),this.element.addEventListener("dragstart",qe=>{if(!qe.dataTransfer)return;const ai={outputId:this.j};qe.dataTransfer.setData("notebook-cell-output",JSON.stringify(ai))}),window.addEventListener("keydown",qe=>{qe.altKey&&(this.element.draggable=!0)}),window.addEventListener("keyup",qe=>{qe.altKey||(this.element.draggable=this.h)}),window.addEventListener("blur",()=>{this.element.draggable=this.h})}dispose(){this.g?.abort(),this.g=void 0}async render(Q,he,$e,qe){if(this.g?.abort(),this.g=void 0,this.c={preferredRendererId:he,preloadErrors:$e},Q.type===0){const As=om?.createHTML(Q.htmlContent)??Q.htmlContent;this.element.innerHTML=As}else if($e.some(As=>As instanceof Error)){const As=$e.filter(lr=>lr instanceof Error);Yh("Error loading preloads",this.element,As)}else{const As=["image/png","image/jpeg","image/svg"];this.h=As.includes(Q.output.mime),this.element.draggable=this.h;const lr=Zr(this.j,Q.output.mime,Q.metadata,Q.output.valueBytes,Q.allOutputs,Q.output.appended),qo=new AbortController;this.g=qo,qe?.addEventListener("abort",()=>qo.abort());try{await Oe.render(lr,he,this.element,qo.signal)}finally{this.g===qo&&(this.g=void 0)}}this.f||(this.f=!0,we.observe(this.element,this.j,!0,this.cellId));const ai=this.element.offsetHeight,jt=document.defaultView.getComputedStyle(this.element),fs=parseFloat(jt.paddingTop)+parseFloat(jt.paddingBottom),nn=ai-fs;ue(nn)&&jt.padding==="0px"?(Z.updateHeight(this.j,ai+i.style.outputNodePadding*2,{isOutput:!0,init:!0}),this.element.style.padding=`${i.style.outputNodePadding}px ${i.style.outputNodePadding}px ${i.style.outputNodePadding}px ${i.style.outputNodeLeftPadding}`):ue(nn)?(Z.updateHeight(this.j,this.element.offsetHeight,{isOutput:!0,init:!0}),this.element.style.padding=`0 ${i.style.outputNodePadding}px 0 ${i.style.outputNodeLeftPadding}`):Z.updateHeight(this.j,0,{isOutput:!0,init:!0});const hn=this.element.shadowRoot??this.element,wr=Tt.requestHighlightCodeBlock(hn);wr.length>0&&us("renderedCellOutput",{codeBlocks:wr})}updateAndRerender(Q){this.c&&this.render(Q,this.c.preferredRendererId,this.c.preloadErrors)}}const pc=new class{constructor(){window.document.addEventListener("dragover",Q=>{Q.preventDefault()}),window.document.addEventListener("drop",Q=>{Q.preventDefault();const he=this.c;he&&(this.c=void 0,us("cell-drop",{cellId:he.cellId,ctrlKey:Q.ctrlKey,altKey:Q.altKey,dragOffsetY:Q.clientY}))})}startDrag(Q,he){if(!Q.dataTransfer||!o.dragAndDropEnabled)return;this.c={cellId:he,clientY:Q.clientY};const $e=9999;this.f||(this.f=document.createElement("div"),this.f.style.position="absolute",this.f.style.top="0",this.f.style.left="0",this.f.style.zIndex=`${$e}`,this.f.style.width="100%",this.f.style.height="100%",this.f.style.background="transparent",window.document.body.appendChild(this.f)),Q.target.style.zIndex=`${$e+1}`,Q.target.classList.add("dragging"),us("cell-drag-start",{cellId:he,dragOffsetY:Q.clientY});const qe=()=>{this.c?.cellId===he&&(us("cell-drag",{cellId:he,dragOffsetY:this.c.clientY}),window.requestAnimationFrame(qe))};window.requestAnimationFrame(qe)}updateDrag(Q,he){he!==this.c?.cellId?this.c=void 0:this.c={cellId:he,clientY:Q.clientY}}endDrag(Q,he){this.c=void 0,Q.target.classList.remove("dragging"),us("cell-drag-end",{cellId:he}),this.f&&(this.f.remove(),this.f=void 0),Q.target.style.zIndex=""}}})(
			JSON.parse(decodeURIComponent("%7B%22style%22%3A%7B%22outputNodePadding%22%3A8%2C%22outputNodeLeftPadding%22%3A8%2C%22previewNodePadding%22%3A8%2C%22markdownLeftMargin%22%3A44%2C%22leftMargin%22%3A8%2C%22rightMargin%22%3A16%2C%22runGutter%22%3A36%2C%22dragAndDropEnabled%22%3Atrue%2C%22fontSize%22%3A14%2C%22outputFontSize%22%3A14%2C%22outputFontFamily%22%3A%22%22%2C%22markupFontSize%22%3A0%2C%22markdownLineHeight%22%3A0%2C%22outputLineHeight%22%3A19%2C%22outputScrolling%22%3Afalse%2C%22outputWordWrap%22%3Afalse%2C%22outputLineLimit%22%3A30%2C%22outputLinkifyFilePaths%22%3Atrue%2C%22minimalError%22%3Afalse%2C%22markupFontFamily%22%3A%22%22%2C%22fontFamily%22%3A%22Consolas%2C%20'Courier%20New'%2C%20monospace%22%2C%22tokenizationCss%22%3A%22%5Cn.mtk1%20%7B%20color%3A%20%23e6edf3%3B%20%7D%5Cn.mtk2%20%7B%20color%3A%20%230d1117%3B%20%7D%5Cn.mtk3%20%7B%20color%3A%20%238b949e%3B%20%7D%5Cn.mtk4%20%7B%20color%3A%20%23ff7b72%3B%20%7D%5Cn.mtk5%20%7B%20color%3A%20%2379c0ff%3B%20%7D%5Cn.mtk6%20%7B%20color%3A%20%23ffa657%3B%20%7D%5Cn.mtk7%20%7B%20color%3A%20%23d2a8ff%3B%20%7D%5Cn.mtk8%20%7B%20color%3A%20%237ee787%3B%20%7D%5Cn.mtk9%20%7B%20color%3A%20%23a5d6ff%3B%20%7D%5Cn.mtk10%20%7B%20color%3A%20%23ffa198%3B%20%7D%5Cn.mtk11%20%7B%20color%3A%20%23f0f6fc%3B%20%7D%5Cn.mtk12%20%7B%20color%3A%20%23490202%3B%20%7D%5Cn.mtk13%20%7B%20color%3A%20%2304260f%3B%20%7D%5Cn.mtk14%20%7B%20color%3A%20%235a1e02%3B%20%7D%5Cn.mtk15%20%7B%20color%3A%20%23161b22%3B%20%7D%5Cn.mtk16%20%7B%20color%3A%20%236796e6%3B%20%7D%5Cn.mtk17%20%7B%20color%3A%20%23cd9731%3B%20%7D%5Cn.mtk18%20%7B%20color%3A%20%23f44747%3B%20%7D%5Cn.mtk19%20%7B%20color%3A%20%23b267e6%3B%20%7D%5Cn.mtki%20%7B%20font-style%3A%20italic%3B%20%7D%5Cn.mtkb%20%7B%20font-weight%3A%20bold%3B%20%7D%5Cn.mtku%20%7B%20text-decoration%3A%20underline%3B%20text-underline-position%3A%20under%3B%20%7D%5Cn.mtks%20%7B%20text-decoration%3A%20line-through%3B%20%7D%5Cn.mtks.mtku%20%7B%20text-decoration%3A%20underline%20line-through%3B%20text-underline-position%3A%20under%3B%20%7D%22%7D%2C%22options%22%3A%7B%22dragAndDropEnabled%22%3Atrue%7D%2C%22renderOptions%22%3A%7B%22lineLimit%22%3A30%2C%22outputScrolling%22%3Afalse%2C%22outputWordWrap%22%3Afalse%2C%22linkifyFilePaths%22%3Atrue%2C%22minimalError%22%3Afalse%7D%2C%22rendererData%22%3A%5B%7B%22id%22%3A%22vscode.markdown-it-cell-attachment-renderer%22%2C%22entrypoint%22%3A%7B%22extends%22%3A%22vscode.markdown-it-renderer%22%2C%22path%22%3A%22https%3A%2F%2Fvscode-remote%252Bcodespaces-002bfantastic-002dgoggles-002dwrrqp44grjg929w59.vscode-resource.vscode-cdn.net%2Fvscode%2Fbin%2Flinux-x64%2F848b80aeb52026648a8ff9f7c45a9b0a80641e2e%2Fextensions%2Fipynb%2Fnotebook-out%2FcellAttachmentRenderer.js%22%7D%2C%22mimeTypes%22%3A%5B%5D%2C%22messaging%22%3Afalse%2C%22isBuiltin%22%3Atrue%7D%2C%7B%22id%22%3A%22vscode.markdown-it-renderer%22%2C%22entrypoint%22%3A%7B%22path%22%3A%22https%3A%2F%2Fvscode-remote%252Bcodespaces-002bfantastic-002dgoggles-002dwrrqp44grjg929w59.vscode-resource.vscode-cdn.net%2Fvscode%2Fbin%2Flinux-x64%2F848b80aeb52026648a8ff9f7c45a9b0a80641e2e%2Fextensions%2Fmarkdown-language-features%2Fnotebook-out%2Findex.js%22%7D%2C%22mimeTypes%22%3A%5B%22text%2Fmarkdown%22%2C%22text%2Flatex%22%2C%22text%2Fx-css%22%2C%22text%2Fx-html%22%2C%22text%2Fx-json%22%2C%22text%2Fx-typescript%22%2C%22text%2Fx-abap%22%2C%22text%2Fx-apex%22%2C%22text%2Fx-azcli%22%2C%22text%2Fx-bat%22%2C%22text%2Fx-cameligo%22%2C%22text%2Fx-clojure%22%2C%22text%2Fx-coffee%22%2C%22text%2Fx-cpp%22%2C%22text%2Fx-csharp%22%2C%22text%2Fx-csp%22%2C%22text%2Fx-css%22%2C%22text%2Fx-dart%22%2C%22text%2Fx-dockerfile%22%2C%22text%2Fx-ecl%22%2C%22text%2Fx-fsharp%22%2C%22text%2Fx-go%22%2C%22text%2Fx-graphql%22%2C%22text%2Fx-handlebars%22%2C%22text%2Fx-hcl%22%2C%22text%2Fx-html%22%2C%22text%2Fx-ini%22%2C%22text%2Fx-java%22%2C%22text%2Fx-javascript%22%2C%22text%2Fx-julia%22%2C%22text%2Fx-kotlin%22%2C%22text%2Fx-less%22%2C%22text%2Fx-lexon%22%2C%22text%2Fx-lua%22%2C%22text%2Fx-m3%22%2C%22text%2Fx-markdown%22%2C%22text%2Fx-mips%22%2C%22text%2Fx-msdax%22%2C%22text%2Fx-mysql%22%2C%22text%2Fx-objective-c%2Fobjective%22%2C%22text%2Fx-pascal%22%2C%22text%2Fx-pascaligo%22%2C%22text%2Fx-perl%22%2C%22text%2Fx-pgsql%22%2C%22text%2Fx-php%22%2C%22text%2Fx-postiats%22%2C%22text%2Fx-powerquery%22%2C%22text%2Fx-powershell%22%2C%22text%2Fx-pug%22%2C%22text%2Fx-python%22%2C%22text%2Fx-r%22%2C%22text%2Fx-razor%22%2C%22text%2Fx-redis%22%2C%22text%2Fx-redshift%22%2C%22text%2Fx-restructuredtext%22%2C%22text%2Fx-ruby%22%2C%22text%2Fx-rust%22%2C%22text%2Fx-sb%22%2C%22text%2Fx-scala%22%2C%22text%2Fx-scheme%22%2C%22text%2Fx-scss%22%2C%22text%2Fx-shell%22%2C%22text%2Fx-solidity%22%2C%22text%2Fx-sophia%22%2C%22text%2Fx-sql%22%2C%22text%2Fx-st%22%2C%22text%2Fx-swift%22%2C%22text%2Fx-systemverilog%22%2C%22text%2Fx-tcl%22%2C%22text%2Fx-twig%22%2C%22text%2Fx-typescript%22%2C%22text%2Fx-vb%22%2C%22text%2Fx-xml%22%2C%22text%2Fx-yaml%22%2C%22application%2Fjson%22%5D%2C%22messaging%22%3Afalse%2C%22isBuiltin%22%3Atrue%7D%2C%7B%22id%22%3A%22vscode.markdown-it-katex-extension%22%2C%22entrypoint%22%3A%7B%22extends%22%3A%22vscode.markdown-it-renderer%22%2C%22path%22%3A%22https%3A%2F%2Fvscode-remote%252Bcodespaces-002bfantastic-002dgoggles-002dwrrqp44grjg929w59.vscode-resource.vscode-cdn.net%2Fvscode%2Fbin%2Flinux-x64%2F848b80aeb52026648a8ff9f7c45a9b0a80641e2e%2Fextensions%2Fmarkdown-math%2Fnotebook-out%2Fkatex.js%22%7D%2C%22mimeTypes%22%3A%5B%5D%2C%22messaging%22%3Afalse%2C%22isBuiltin%22%3Atrue%7D%2C%7B%22id%22%3A%22vscode.builtin-renderer%22%2C%22entrypoint%22%3A%7B%22path%22%3A%22https%3A%2F%2Fassets.github.dev%2Fstable%2F848b80aeb52026648a8ff9f7c45a9b0a80641e2e%2Fextensions%2Fnotebook-renderers%2Frenderer-out%2Findex.js%22%7D%2C%22mimeTypes%22%3A%5B%22image%2Fgif%22%2C%22image%2Fpng%22%2C%22image%2Fjpeg%22%2C%22image%2Fgit%22%2C%22image%2Fsvg%2Bxml%22%2C%22text%2Fhtml%22%2C%22application%2Fjavascript%22%2C%22application%2Fvnd.code.notebook.error%22%2C%22application%2Fvnd.code.notebook.stdout%22%2C%22application%2Fx.notebook.stdout%22%2C%22application%2Fx.notebook.stream%22%2C%22application%2Fvnd.code.notebook.stderr%22%2C%22application%2Fx.notebook.stderr%22%2C%22text%2Fplain%22%5D%2C%22messaging%22%3Afalse%2C%22isBuiltin%22%3Atrue%7D%5D%2C%22staticPreloadsData%22%3A%5B%5D%2C%22isWorkspaceTrusted%22%3Atrue%2C%22nonce%22%3A%22d8d610f6-b3d1-48a2-8f73-20b909c7ac6d%22%7D"))
		)
//# sourceURL=notebookWebviewPreloads.js
</script>
			
		<style>
	#container div.output.remove-padding {
		padding-left: 0;
		padding-right: 0;
	}
	.output-plaintext,
	.output-stream,
	.traceback {
		display: inline-block;
		width: 100%;
		line-height: var(--notebook-cell-output-line-height);
		font-family: var(--notebook-cell-output-font-family);
		font-size: var(--notebook-cell-output-font-size);
		user-select: text;
		-webkit-user-select: text;
		-ms-user-select: text;
		cursor: auto;
		word-wrap: break-word;
		/* text/stream output container should scroll but preserve newline character */
		white-space: pre;
	}
	/* When wordwrap turned on, force it to pre-wrap */
	#container div.output_container .word-wrap {
		white-space: pre-wrap;
	}
	#container div.output>div {
		padding-left: var(--notebook-output-node-left-padding);
		padding-right: var(--notebook-output-node-padding);
		box-sizing: border-box;
		border-width: 1px;
		border-style: solid;
		border-color: transparent;
	}
	#container div.output>div:focus {
		outline: 0;
		border-color: var(--theme-input-focus-border-color);
	}
	#container div.output .scrollable {
		overflow-y: auto;
		max-height: var(--notebook-cell-output-max-height);
	}
	#container div.output .scrollable.scrollbar-visible {
		border-color: var(--vscode-editorWidget-border);
	}
	#container div.output .scrollable.scrollbar-visible:focus {
		border-color: var(--theme-input-focus-border-color);
	}
	#container div.truncation-message {
		font-style: italic;
		font-family: var(--theme-font-family);
		padding-top: 4px;
	}
	#container div.output .scrollable div {
		cursor: text;
	}
	#container div.output .scrollable div a {
		cursor: pointer;
	}
	#container div.output .scrollable.more-above {
		box-shadow: var(--vscode-scrollbar-shadow) 0 6px 6px -6px inset
	}
	.output-plaintext .code-bold,
	.output-stream .code-bold,
	.traceback .code-bold {
		font-weight: bold;
	}
	.output-plaintext .code-italic,
	.output-stream .code-italic,
	.traceback .code-italic {
		font-style: italic;
	}
	.output-plaintext .code-strike-through,
	.output-stream .code-strike-through,
	.traceback .code-strike-through {
		text-decoration: line-through;
	}
	.output-plaintext .code-underline,
	.output-stream .code-underline,
	.traceback .code-underline {
		text-decoration: underline;
	}
	#container ul.error-output-actions {
		margin: 0px;
		padding: 6px 0px 0px 6px;
		padding-inline-start: 0px;
	}
	#container .error-output-actions li {
		padding: 0px 4px 0px 4px;
		border-radius: 5px;
		height: 20px;
		display: inline-flex;
		cursor: pointer;
		border: solid 1px var(--vscode-notebook-cellToolbarSeparator);
	}
	#container .error-output-actions li.hover {
		background-color: var(--vscode-toolbar-hoverBackground);
	}
	#container .error-output-actions li:focus-within {
		border-color: var(--theme-input-focus-border-color);
	}
	#container .error-output-actions a:focus {
		outline: 0;
	}
	#container .error-output-actions li a {
		color: var(--vscode-foreground);
		text-decoration: none;
	}
	#container .error-output-header a {
		padding-right: 12px;
	}
	</style></body></html>